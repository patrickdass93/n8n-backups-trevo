{
  "active": true,
  "connections": {
    "Rejections - Schedule Trigger": {
      "main": [
        [
          {
            "node": "Rejections - Clear Sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Rejections - Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rejections - Query": {
      "main": [
        [
          {
            "node": "Rejections - Format Date",
            "type": "main",
            "index": 0
          },
          {
            "node": "Rejections - Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rejections - Format Date": {
      "main": [
        [
          {
            "node": "Rejections - Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Rejections - Merge": {
      "main": [
        [
          {
            "node": "Rejections - Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ratings - Schedule Trigger": {
      "main": [
        [
          {
            "node": "Ratings - Query",
            "type": "main",
            "index": 0
          },
          {
            "node": "Ratings - Clear Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ratings - Query": {
      "main": [
        [
          {
            "node": "Rejections - Format Date1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Rejections - Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Reviews - Schedule Trigger": {
      "main": [
        [
          {
            "node": "Reviews - Clear Sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Reviews - Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rejections - Format Date1": {
      "main": [
        [
          {
            "node": "Rejections - Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rejections - Merge1": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reviews - Query": {
      "main": [
        [
          {
            "node": "Reviews - Format Date",
            "type": "main",
            "index": 0
          },
          {
            "node": "Rejections - Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Reviews - Format Date": {
      "main": [
        [
          {
            "node": "Rejections - Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rejections - Merge2": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-10-19T10:25:06.715Z",
  "id": "dYj1vtJBOJH6jjAr",
  "name": "[Pat] [Supply] HSP",
  "nodes": [
    {
      "parameters": {
        "content": "## Rejections\n",
        "height": 403.77720314386875,
        "width": 1062.545454545454
      },
      "id": "273e6e29-52bb-4a8e-9dd8-469946a94276",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        40
      ]
    },
    {
      "parameters": {
        "content": "## Ratings\n",
        "height": 398.4614531691681,
        "width": 1062.545454545454
      },
      "id": "acb41e59-cb49-4912-a33a-0bd74685b6bf",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        460
      ]
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Rejections Raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit#gid=0"
        },
        "clear": "specificRange",
        "range": "A2:K"
      },
      "id": "4ccf0fa0-2736-4f30-906b-faee3ee84315",
      "name": "Rejections - Clear Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        140,
        100
      ],
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3",
          "name": "Google Sheets [Pat]"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "20 07-23 * * *"
            }
          ]
        }
      },
      "id": "a74132b5-bcba-4622-8f45-43406c8e5fca",
      "name": "Rejections - Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -80,
        260
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH\n    my_listings AS (\n        SELECT \n            l.id as listing_id\n            , l.registration_no\n            , l.user_id as host_id\n            , u.uuid\n            , CASE \n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 2 OR city_id = 48 THEN 'PG'\n                WHEN city_id = 3 THEN 'KK'\n                WHEN city_id = 4 THEN 'JB'\n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 5 THEN 'IP'\n                WHEN city_id = 12 THEN 'KDH'\n                WHEN city_id = 13 THEN 'LGK'\n                WHEN city_id = 14 THEN 'PLS'\n                WHEN city_id = 15 THEN 'MLK'\n                WHEN city_id = 16 THEN 'PHG'\n                WHEN city_id = 17 THEN 'TRG'\n                WHEN city_id = 18 THEN 'KLT'\n                WHEN city_id = 19 THEN 'LBN'\n                WHEN city_id = 20 THEN 'SDK'\n                WHEN city_id = 21 THEN 'TWU'\n                WHEN city_id = 22 THEN 'KCH'\n                WHEN city_id = 23 THEN 'MRI'\n                WHEN city_id = 47 THEN 'NS'\n                ELSE NULL END as city\n            , case \n            \twhen city_id in (1,47,18,17,16) then 'CENTRAL'\n            \twhen city_id in (2,48,5,12,13,14) then 'NORTH'\n            \twhen city_id in (3,19,20,21,22,23) then 'EAST'\n            \twhen city_id in (4,15) then 'SOUTH'\n            \telse null end as cm_city\n            , l.status\n            \n        FROM listings l\n        JOIN listing_location ll on ll.listing_id = l.id\n            AND country = 'Malaysia'\n        JOIN users u ON u.id = l.user_id \n        WHERE 1=1\n            AND l.deleted_at IS NULL\n            AND l.status IN ('approved','rejected', 'processing')\n    )\n    \n    , my_bookings AS (\n        SELECT \n            b.id as booking_id\n            , b.listing_id\n            ,CASE \n\t\t\t    WHEN (b.status = 'rejected' AND (b.reason !~* '(guest)' OR b.reason IS NULL))\n\t\t\t    \t\t    \t\n\t\t\t        OR (\n\t\t\t            b.status IN ('withdrawn', 'cancelled') \n\t\t\t            AND b.reason ~* '(host|owner|avai|car)' \n\t\t\t            AND b.reason !~* '(after i read|dont need|extended|rebook|rebooking|\n\t\t\t            wrong date|wrong time|I didnt|manual|I want|I need|sorry|I would|mistake|my own car|wrong|change)') \n\t\t\t        OR (\n\t\t\t            b.reason = 'Host is taking a long time to respond' \n\t\t\t            AND (\n\t\t\t                (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) >= 2 OR\n\t\t\t                (\n\t\t\t                    (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) >= 8 \n\t\t\t                    AND NOT (\n\t\t\t                        (EXTRACT(HOUR FROM b.created_at) >= 23 AND EXTRACT(HOUR FROM b.request_start_at) <= 7) OR\n\t\t\t                        (\n\t\t\t                            EXTRACT(HOUR FROM b.created_at) >= 23 OR \n\t\t\t                            EXTRACT(HOUR FROM b.created_at) <= 8\n\t\t\t                        )\n\t\t\t                    ) AND ((EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 60) / 60) > 6\n\t\t\t                )\n\t\t\t            )\n\t\t\t        )\n\t\t\t    THEN 'rejected'\n\t\t\t    when (b.reason = 'auto-rejected'\n\t\t\t    \t\t\tand (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) <= 8\n\t\t\t    \t\t\tand ((EXTRACT(HOUR FROM b.created_at)) >= 23 OR \n\t\t\t                            (EXTRACT(HOUR FROM b.created_at)) <= 6) )\n\t\t\t    then 'withdrawn'\n\t\t\t    ELSE b.status \n\t\t\tEND AS status\n            , b.created_at::DATE as request_date\n            , to_char(b.created_at, 'YYYY-\"Q\"Q') as period\n    \n        FROM bookings b\n        \n        WHERE 1=1\n            AND currency = 'myr'\n            AND b.status IN ('rejected','withdrawn','cancelled')\n            AND b.created_at > '2023-11-08'\n    )\n    \n    , data AS (\n        SELECT \n            booking_id\n            , l.listing_id\n            , request_date\n            , period\n            , ROW_NUMBER () OVER (PARTITION BY b.listing_id, b.period ORDER BY b.request_date ASC)  AS quarterly_reject_count\n            , city\n            , cm_city\n            , l.uuid\n            , l.registration_no\n            , l.status\n        FROM my_bookings b\n        JOIN my_listings l on l.listing_id = b.listing_id\n        WHERE 1=1\n        AND b.status = 'rejected'\n    )\n\nSELECT \n    listing_id\n    , period\n    , request_date\n    , booking_id\n    , quarterly_reject_count\n    , city\n    , cm_city\n    , uuid\n    , registration_no\n    , status\nFROM data",
        "options": {}
      },
      "id": "9189d00b-fd3f-462c-bb18-e8e76487d138",
      "name": "Rejections - Query",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        140,
        260
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "Trevo DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.request_date }}",
        "options": {}
      },
      "id": "2e4b8db5-37e6-4000-baf7-ec63b0458710",
      "name": "Rejections - Format Date",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        340,
        100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "1120fe30-1217-494a-b9bf-fafbb823a240",
      "name": "Rejections - Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        520,
        260
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Rejections Raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "listing_id": "={{ $json.listing_id }}",
            "period": "={{ $json.period }}",
            "request_date": "={{ $json.formattedDate }}",
            "booking_id": "={{ $json.booking_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "listing_id",
              "displayName": "listing_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "period",
              "displayName": "period",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "request_date",
              "displayName": "request_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "booking_id",
              "displayName": "booking_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "quarterly_reject_count",
              "displayName": "quarterly_reject_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "ec1218b4-969b-475a-ae78-7b27e384d6ef",
      "name": "Rejections - Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        680,
        260
      ],
      "retryOnFail": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3",
          "name": "Google Sheets [Pat]"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 4,
              "triggerAtMinute": 20
            }
          ]
        }
      },
      "id": "13a9b5d0-d6e5-43bf-860b-8a19f9f423c3",
      "name": "Ratings - Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -80,
        700
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH\n    rated_bookings AS (\n        SELECT\n            listing_id\n            , COUNT(DISTINCT br.id) as rated_bookings\n        FROM booking_reviews br\n        JOIN bookings b on b.id = br.booking_id\n        \n        WHERE 1=1\n            AND br.type = 'renter'\n            AND br.deleted_at IS NULL\n            AND br.created_at > '2023-07-01'\n        \n        GROUP BY 1\n    )\n        \n    , my_bookings AS (\n        SELECT \n            b.id as booking_id\n            , b.listing_id\n            , b.request_end_at::DATE as date\n            , to_char(b.created_at, 'YYYY-\"Q\"Q') as period\n            , rating\n            , ROW_NUMBER () OVER (PARTITION BY b.listing_id, to_char(b.created_at, 'YYYY-\"Q\"Q') ORDER BY b.request_end_at ASC) AS bookings\n    \n        FROM rated_bookings l\n        JOIN bookings b on b.listing_id = l.listing_id\n            AND currency = 'myr'\n            AND b.status IN ('completed')\n            AND b.created_at > '2023-07-01'\n        JOIN booking_reviews br on br.booking_id = b.id\n            AND br.type = 'renter'\n            AND br.deleted_at IS NULL\n            AND br.created_at > '2023-07-01'\n        \n        WHERE 1=1\n            AND rating IS NOT NULL\n            AND l.rated_bookings >4\n\n    )\n    \n    , data AS (\n        SELECT \n            listing_id\n            , booking_id\n            , period\n            , date\n            , rating\n            , ROUND(coalesce(avg(rating) over (partition by listing_id order by date)),1) as rollingAvg\n        FROM my_bookings b\n        WHERE 1=1\n\n    )\n\nSELECT \n    listing_id\n    , booking_id\n    , period\n    , date\n    , rating\n    , rollingAvg\nFROM data\nWHERE 1=1\n    AND rollingAvg < 4.45\nORDER BY 1",
        "options": {}
      },
      "id": "527d08c0-164a-4cf1-89d8-360e74c19405",
      "name": "Ratings - Query",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        140,
        700
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "Trevo DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Reviews\n",
        "height": 518.5974025974023,
        "width": 1062.545454545454
      },
      "id": "9c155a8a-2b07-47c5-bd07-ae53e02c4a8b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        880
      ]
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 922422680,
          "mode": "list",
          "cachedResultName": "Review Raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit#gid=922422680"
        },
        "clear": "specificRange",
        "range": "A2:F"
      },
      "id": "01e8ed14-c86a-4591-bf07-0b4ad502aa8d",
      "name": "Reviews - Clear Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        100,
        1000
      ],
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3",
          "name": "Google Sheets [Pat]"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH\n    my_bookings AS (\n        SELECT DISTINCT ON (b.id,br.reason)\n            b.id as booking_id\n            , b.listing_id\n            , b.created_at::DATE as request_date\n            , to_char(b.created_at, 'YYYY-\"Q\"Q') as period\n            , br.reason\n            , REGEXP_REPLACE(br.comment, '\\s+$', '') as comment\n    \n        FROM bookings b\n        JOIN booking_reports br on br.user_id = b.user_id \n            AND br.booking_id = b.id\n        \n        WHERE 1=1\n            AND currency = 'myr'\n            AND b.status = 'completed'\n            AND b.created_at > '2023-07-01'\n            AND br.reason NOT IN ('report_popup_car_has_an_accident')\n            /* Cleanliness */\n            AND (comment LIKE ('%dirty%') OR comment LIKE ('%clean%') OR comment LIKE ('%clean up%') OR comment LIKE ('%kotor%')\n            OR comment LIKE ('%cockroach%') OR comment LIKE ('%Cleanliness%') \n            /* Maintenance */\n            -- Tyre\n            OR comment LIKE ('%worn out%') OR comment LIKE ('%tyre%') OR comment LIKE ('%tire%') OR comment LIKE ('%tayar%') \n            OR comment LIKE ('%botak%') OR comment LIKE ('%no air%')\n            -- Glass\n            OR comment LIKE ('%windscreen%') OR comment LIKE ('%window%') OR comment LIKE ('%crack%') OR comment LIKE ('%retak%')\n            -- Air Conditioning\n            OR comment LIKE ('%air cond%') OR comment LIKE ('%aircon%') OR comment LIKE ('%air conditioning%') OR comment LIKE ('%not cold%')\n            -- Lights\n            OR comment LIKE ('%lights%') OR comment LIKE ('%lampu%') OR comment LIKE ('% light%') \n            -- Steering\n            OR comment LIKE ('%alignment%') OR comment LIKE ('%steering%') OR comment LIKE ('%brake%') \n            -- Misc\n            OR comment LIKE ('%torn%') OR comment LIKE ('%noise%') OR comment LIKE ('%torn%') OR comment LIKE ('%bunyi%')\n            OR comment LIKE ('%battery%') OR comment LIKE ('%damaged%') OR comment LIKE ('%engine%') OR comment LIKE ('%funtioning%')\n            OR comment LIKE ('%good condition%') OR comment LIKE ('%broken%') OR comment LIKE ('%breakdown%') OR comment LIKE ('%broke down%')\n            OR comment LIKE ('%not well maintained%') OR comment LIKE ('%not suitable for rent%') OR comment LIKE ('%meter%')\n\n            /*AND comment NOT LIKE ('%deliver%') AND comment NOT LIKE ('%delivery%') AND comment NOT LIKE ('%refund%')\n            AND comment NOT LIKE ('%return%') AND comment NOT LIKE ('%excess oil%') AND comment NOT LIKE ('%inspection%')\n            AND comment NOT LIKE ('%gambar%') AND comment NOT LIKE ('%ejen%') AND comment NOT LIKE ('%agent%')\n            AND comment NOT LIKE ('%dasher%')*/\n    ))\n    \nSELECT * FROM my_bookings",
        "options": {}
      },
      "id": "de26c97b-a294-4f2e-85da-43ff1e8ee130",
      "name": "Reviews - Query",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        100,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "Trevo DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "20 07-23 * * *"
            }
          ]
        }
      },
      "id": "a847b1d2-ac5e-4760-946f-efa04c41e2e1",
      "name": "Reviews - Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -80,
        1160
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E",
          "mode": "list",
          "cachedResultName": "HSP",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 417522499,
          "mode": "list",
          "cachedResultName": "Ratings Raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit#gid=417522499"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "listing_id": "={{ $json.listing_id }}",
            "period": "={{ $json.period }}",
            "rating": "={{ $json.rating }}",
            "trigger_date": "=",
            "date": "={{ $json.formattedDate }}",
            "booking_id": "={{ $json.booking_id }}",
            "rolling_avg": "={{ $json.rollingavg }}"
          },
          "matchingColumns": [
            "listing_id"
          ],
          "schema": [
            {
              "id": "listing_id",
              "displayName": "listing_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "booking_id",
              "displayName": "booking_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "period",
              "displayName": "period",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "rating",
              "displayName": "rating",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "rolling_avg",
              "displayName": "rolling_avg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "booking_count",
              "displayName": "booking_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "2663b503-8692-4e46-9e9c-52a8a1c3eaf3",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        720,
        700
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3",
          "name": "Google Sheets [Pat]"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.date }}",
        "options": {}
      },
      "id": "3266579b-75f8-46f6-930e-09a5d40ecfc4",
      "name": "Rejections - Format Date1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        360,
        520
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 417522499,
          "mode": "list",
          "cachedResultName": "Ratings Raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit#gid=417522499"
        },
        "clear": "specificRange",
        "range": "A2:F"
      },
      "id": "78951436-baa3-4030-9f76-00936820ff16",
      "name": "Ratings - Clear Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        140,
        520
      ],
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3",
          "name": "Google Sheets [Pat]"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "e0a4fdd4-b552-4bc9-b57a-1a539e1ec164",
      "name": "Rejections - Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        520,
        700
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.request_date }}",
        "options": {}
      },
      "id": "6362e74c-e7c1-45dd-b4ee-c7c4a69eb977",
      "name": "Reviews - Format Date",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        380,
        1020
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "e981d0ae-9f06-45a5-bc18-dc9c4306d797",
      "name": "Rejections - Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        540,
        1160
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E",
          "mode": "list",
          "cachedResultName": "HSP",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 922422680,
          "mode": "list",
          "cachedResultName": "Reviews Raw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qx7wAfvluLOC2Td_mofTJvAb4TsOY96JXEBS1_dME-E/edit#gid=922422680"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "request_date": "={{ $json.formattedDate }}",
            "booking_id": "={{ $json.booking_id }}",
            "listing_id": "={{ $json.listing_id }}",
            "period": "={{ $json.period }}",
            "reason": "={{ $json.reason }}",
            "comment": "={{ $json.comment }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "listing_id",
              "displayName": "listing_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "booking_id",
              "displayName": "booking_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "request_date",
              "displayName": "request_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "period",
              "displayName": "period",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "reason",
              "displayName": "reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "comment",
              "displayName": "comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "#REF!",
              "displayName": "#REF!",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "2615b955-be6b-4314-a59a-9ad43e79f8c3",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        720,
        1160
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3",
          "name": "Google Sheets [Pat]"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH\n    my_listings AS (\n        SELECT \n            l.id as listing_id\n            , l.user_id as host_id\n            , CASE \n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 2 OR city_id = 48 THEN 'PG'\n                WHEN city_id = 3 THEN 'KK'\n                WHEN city_id = 4 THEN 'JB'\n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 5 THEN 'IP'\n                WHEN city_id = 12 THEN 'KDH'\n                WHEN city_id = 13 THEN 'LGK'\n                WHEN city_id = 14 THEN 'PLS'\n                WHEN city_id = 15 THEN 'MLK'\n                WHEN city_id = 16 THEN 'PHG'\n                WHEN city_id = 17 THEN 'TRG'\n                WHEN city_id = 18 THEN 'KLT'\n                WHEN city_id = 19 THEN 'LBN'\n                WHEN city_id = 20 THEN 'SDK'\n                WHEN city_id = 21 THEN 'TWU'\n                WHEN city_id = 22 THEN 'KCH'\n                WHEN city_id = 23 THEN 'MRI'\n                WHEN city_id = 47 THEN 'NS'\n                ELSE NULL END as city\n        FROM listings l\n        JOIN listing_location ll on ll.listing_id = l.id\n            AND country = 'Malaysia'\n        WHERE 1=1\n            AND l.deleted_at IS NULL\n            AND l.status = 'approved'\n    )\n    \n    , my_bookings AS (\n        SELECT \n            b.id as booking_id\n            , b.listing_id\n            ,CASE \n                WHEN (b.status = 'rejected' AND (b.reason !~* '(guest)' OR b.reason IS NULL)) \n                    OR (\n                        b.status IN ('withdrawn', 'cancelled') \n                        AND b.reason ~* '(host|owner|avai|car)' \n                        AND b.reason !~* '(after i read|dont need|extended|rebook|rebooking|\n                        wrong date|wrong time|I didnt|manual|I want|I need|sorry|I would|mistake|my own car|wrong|change)') \n                    OR (\n                        b.reason = 'Host is taking a long time to respond' \n                        AND ((EXTRACT(EPOCH FROM b.updated_at::timestamp) \n                            - EXTRACT(EPOCH FROM b.created_at::timestamp))/3600::integer) < '2')\n                    OR (\n                        b.reason = 'Host is taking a long time to respond' \n                        AND (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) < 8 \n                        AND (EXTRACT(HOUR FROM b.created_at) >= 23 OR EXTRACT(HOUR FROM b.created_at) <= 8) \n                        AND ((EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 60) / 60) <= 6)\n                    OR (\n                        (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) < 8 \n                        AND (EXTRACT(HOUR FROM b.created_at) >= 23 AND EXTRACT(HOUR FROM b.request_start_at) <= 7) \n                        AND ((EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 60) / 60) <= 6)\n            THEN 'rejected' ELSE b.status END as status\n            , b.created_at::DATE as request_date\n            , to_char(b.created_at, 'YYYY-\"Q\"Q') as period\n    \n        FROM bookings b\n        \n        WHERE 1=1\n            AND currency = 'myr'\n            AND b.status IN ('rejected','withdrawn','cancelled')\n            AND b.created_at > '2023-07-01'\n    )\n    \n    , data AS (\n        SELECT \n            booking_id\n            , l.listing_id\n            , request_date\n            , period\n            , ROW_NUMBER () OVER (PARTITION BY b.listing_id, b.period ORDER BY b.request_date ASC)  AS quarterly_reject_count\n        FROM my_bookings b\n        JOIN my_listings l on l.listing_id = b.listing_id\n        WHERE 1=1\n            AND b.status = 'rejected'\n    )\n\nSELECT \n    listing_id\n    , period\n    , request_date\n    , booking_id\n    , quarterly_reject_count\nFROM data",
        "options": {}
      },
      "id": "e03c4790-7248-4e6b-a10f-f473c7234047",
      "name": "Rejections - Query [BACKUP]",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -100,
        -180
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "Trevo DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH\n    my_listings AS (\n        SELECT \n            l.id as listing_id\n            , l.registration_no\n            , l.user_id as host_id\n            , u.uuid\n            , CASE \n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 2 OR city_id = 48 THEN 'PG'\n                WHEN city_id = 3 THEN 'KK'\n                WHEN city_id = 4 THEN 'JB'\n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 5 THEN 'IP'\n                WHEN city_id = 12 THEN 'KDH'\n                WHEN city_id = 13 THEN 'LGK'\n                WHEN city_id = 14 THEN 'PLS'\n                WHEN city_id = 15 THEN 'MLK'\n                WHEN city_id = 16 THEN 'PHG'\n                WHEN city_id = 17 THEN 'TRG'\n                WHEN city_id = 18 THEN 'KLT'\n                WHEN city_id = 19 THEN 'LBN'\n                WHEN city_id = 20 THEN 'SDK'\n                WHEN city_id = 21 THEN 'TWU'\n                WHEN city_id = 22 THEN 'KCH'\n                WHEN city_id = 23 THEN 'MRI'\n                WHEN city_id = 47 THEN 'NS'\n                ELSE NULL END as city\n            , case \n            \twhen city_id in (1,47,18,17,16) then 'CENTRAL'\n            \twhen city_id in (2,48,5,12,13,14) then 'NORTH'\n            \twhen city_id in (3,19,20,21,22,23) then 'EAST'\n            \twhen city_id in (4,15) then 'SOUTH'\n            \telse null end as cm_city\n            \n        FROM listings l\n        JOIN listing_location ll on ll.listing_id = l.id\n            AND country = 'Malaysia'\n        JOIN users u ON u.id = l.user_id \n        WHERE 1=1\n            AND l.deleted_at IS NULL\n            AND l.status = 'approved'\n    )\n    \n    , my_bookings AS (\n        SELECT \n            b.id as booking_id\n            , b.listing_id\n            ,CASE \n    WHEN (b.status = 'rejected' AND (b.reason !~* '(guest)' OR b.reason IS NULL)) \n        OR (\n            b.status IN ('withdrawn', 'cancelled') \n            AND b.reason ~* '(host|owner|avai|car)' \n            AND b.reason !~* '(after i read|dont need|extended|rebook|rebooking|\n            wrong date|wrong time|I didnt|manual|I want|I need|sorry|I would|mistake|my own car|wrong|change)') \n        OR (\n            b.reason = 'Host is taking a long time to respond' \n            AND (\n                (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) >= 2 OR\n                (\n                    (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) >= 8 \n                    AND NOT (\n                        (EXTRACT(HOUR FROM b.created_at) >= 23 AND EXTRACT(HOUR FROM b.request_start_at) <= 7) OR\n                        (\n                            EXTRACT(HOUR FROM b.created_at) >= 23 OR \n                            EXTRACT(HOUR FROM b.created_at) <= 8\n                        )\n                    ) AND ((EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 60) / 60) > 6\n                )\n            )\n        )\n    THEN 'rejected' \n    ELSE b.status \nEND AS status\n            , b.created_at::DATE as request_date\n            , to_char(b.created_at, 'YYYY-\"Q\"Q') as period\n    \n        FROM bookings b\n        \n        WHERE 1=1\n            AND currency = 'myr'\n            AND b.status IN ('rejected','withdrawn','cancelled')\n            AND b.created_at > '2023-11-08'\n    )\n    \n    , data AS (\n        SELECT \n            booking_id\n            , l.listing_id\n            , request_date\n            , period\n            , ROW_NUMBER () OVER (PARTITION BY b.listing_id, b.period ORDER BY b.request_date ASC)  AS quarterly_reject_count\n            , city\n            , cm_city\n            , l.uuid\n            , l.registration_no\n        FROM my_bookings b\n        JOIN my_listings l on l.listing_id = b.listing_id\n        WHERE 1=1\n        AND b.status = 'rejected'\n    )\n\nSELECT \n    listing_id\n    , period\n    , request_date\n    , booking_id\n    , quarterly_reject_count\n    , city\n    , cm_city\n    , uuid\n    , registration_no\nFROM data",
        "options": {}
      },
      "id": "44ca717f-fa90-4914-a814-db900e5c46d1",
      "name": "Rejections - Query [BACKUP 2]",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        120,
        -180
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "Trevo DB"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH\n    my_listings AS (\n        SELECT \n            l.id as listing_id\n            , l.registration_no\n            , l.user_id as host_id\n            , u.uuid\n            , CASE \n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 2 OR city_id = 48 THEN 'PG'\n                WHEN city_id = 3 THEN 'KK'\n                WHEN city_id = 4 THEN 'JB'\n                WHEN city_id = 1 THEN 'KV'\n                WHEN city_id = 5 THEN 'IP'\n                WHEN city_id = 12 THEN 'KDH'\n                WHEN city_id = 13 THEN 'LGK'\n                WHEN city_id = 14 THEN 'PLS'\n                WHEN city_id = 15 THEN 'MLK'\n                WHEN city_id = 16 THEN 'PHG'\n                WHEN city_id = 17 THEN 'TRG'\n                WHEN city_id = 18 THEN 'KLT'\n                WHEN city_id = 19 THEN 'LBN'\n                WHEN city_id = 20 THEN 'SDK'\n                WHEN city_id = 21 THEN 'TWU'\n                WHEN city_id = 22 THEN 'KCH'\n                WHEN city_id = 23 THEN 'MRI'\n                WHEN city_id = 47 THEN 'NS'\n                ELSE NULL END as city\n            , case \n            \twhen city_id in (1,47,18,17,16) then 'CENTRAL'\n            \twhen city_id in (2,48,5,12,13,14) then 'NORTH'\n            \twhen city_id in (3,19,20,21,22,23) then 'EAST'\n            \twhen city_id in (4,15) then 'SOUTH'\n            \telse null end as cm_city\n            \n        FROM listings l\n        JOIN listing_location ll on ll.listing_id = l.id\n            AND country = 'Malaysia'\n        JOIN users u ON u.id = l.user_id \n        WHERE 1=1\n            AND l.deleted_at IS NULL\n            AND l.status = 'approved'\n    )\n    \n    , my_bookings AS (\n        SELECT \n            b.id as booking_id\n            , b.listing_id\n            ,CASE \n\t\t\t    WHEN (b.status = 'rejected' AND (b.reason !~* '(guest)' OR b.reason IS NULL))\n\t\t\t    \t\t    \t\n\t\t\t        OR (\n\t\t\t            b.status IN ('withdrawn', 'cancelled') \n\t\t\t            AND b.reason ~* '(host|owner|avai|car)' \n\t\t\t            AND b.reason !~* '(after i read|dont need|extended|rebook|rebooking|\n\t\t\t            wrong date|wrong time|I didnt|manual|I want|I need|sorry|I would|mistake|my own car|wrong|change)') \n\t\t\t        OR (\n\t\t\t            b.reason = 'Host is taking a long time to respond' \n\t\t\t            AND (\n\t\t\t                (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) >= 2 OR\n\t\t\t                (\n\t\t\t                    (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) >= 8 \n\t\t\t                    AND NOT (\n\t\t\t                        (EXTRACT(HOUR FROM b.created_at) >= 23 AND EXTRACT(HOUR FROM b.request_start_at) <= 7) OR\n\t\t\t                        (\n\t\t\t                            EXTRACT(HOUR FROM b.created_at) >= 23 OR \n\t\t\t                            EXTRACT(HOUR FROM b.created_at) <= 8\n\t\t\t                        )\n\t\t\t                    ) AND ((EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 60) / 60) > 6\n\t\t\t                )\n\t\t\t            )\n\t\t\t        )\n\t\t\t    THEN 'rejected'\n\t\t\t    when (b.reason = 'auto-rejected'\n\t\t\t    \t\t\tand (EXTRACT(EPOCH FROM (b.updated_at - b.created_at)) / 3600) <= 8\n\t\t\t    \t\t\tand ((EXTRACT(HOUR FROM b.created_at)) >= 23 OR \n\t\t\t                            (EXTRACT(HOUR FROM b.created_at)) <= 6) )\n\t\t\t    then 'withdrawn'\n\t\t\t    ELSE b.status \n\t\t\tEND AS status\n            , b.created_at::DATE as request_date\n            , to_char(b.created_at, 'YYYY-\"Q\"Q') as period\n    \n        FROM bookings b\n        \n        WHERE 1=1\n            AND currency = 'myr'\n            AND b.status IN ('rejected','withdrawn','cancelled')\n            AND b.created_at > '2023-11-08'\n    )\n    \n    , data AS (\n        SELECT \n            booking_id\n            , l.listing_id\n            , request_date\n            , period\n            , ROW_NUMBER () OVER (PARTITION BY b.listing_id, b.period ORDER BY b.request_date ASC)  AS quarterly_reject_count\n            , city\n            , cm_city\n            , l.uuid\n            , l.registration_no\n        FROM my_bookings b\n        JOIN my_listings l on l.listing_id = b.listing_id\n        WHERE 1=1\n        AND b.status = 'rejected'\n    )\n\nSELECT \n    listing_id\n    , period\n    , request_date\n    , booking_id\n    , quarterly_reject_count\n    , city\n    , cm_city\n    , uuid\n    , registration_no\nFROM data",
        "options": {}
      },
      "id": "93cd0025-c68e-4e58-a943-02e4068eb6d5",
      "name": "Rejections - Query1 [BACKUP 3]",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        340,
        -180
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "Trevo DB"
        }
      },
      "disabled": true
    }
  ],
  "pinData": {},
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 1800,
    "executionOrder": "v1",
    "errorWorkflow": "11"
  },
  "staticData": {
    "node:Rejections - Schedule Trigger": {
      "recurrencyRules": []
    },
    "node:Ratings - Schedule Trigger": {
      "recurrencyRules": []
    },
    "node:Reviews - Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2023-03-31T06:52:09.032Z",
      "updatedAt": "2023-03-31T06:52:09.032Z",
      "id": "5",
      "name": "Patrick"
    },
    {
      "createdAt": "2023-05-12T02:58:38.207Z",
      "updatedAt": "2023-05-12T02:58:38.207Z",
      "id": "8",
      "name": "Host Community"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-07-10T05:13:03.143Z",
  "versionId": "111d1b58-507e-4134-be38-8b0d8ebfcf5a"
}