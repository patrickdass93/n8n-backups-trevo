{
  "active": false,
  "connections": {
    "Postgres": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets3": {
      "main": [
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets7",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets13",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets14",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets15",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Google Sheets6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets7": {
      "main": [
        [
          {
            "node": "Google Sheets8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets8": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Google Sheets10": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres8",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Google Sheets9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres8": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets13": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets14": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets16": {
      "main": [
        [
          {
            "node": "Google Sheets10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets15": {
      "main": [
        [
          {
            "node": "Google Sheets10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Google Sheets4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres10": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Google Sheets11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-01-06T14:01:14.627Z",
  "id": "20",
  "name": "[KAVI & JIUN] [HOST COMMUNITY] [PROJECT ONG TU-GETHER] Dashboard Automation",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect\ncount(dates.ymd) as Total_Days_avai\nfrom listings l \nleft join listing_availability la on la.listing_id = l.id \nleft join (select distinct listing_id, country, city_id from listing_location) ll on ll.listing_id = l.id\njoin (SELECT generate_series(timestamp '2023-01-18', timestamp '2023-01-31', interval '1 day')::date ymd) dates on \ndates.ymd between la.start_date::date and la.end_date::date\nwhere ll.country = 'Malaysia'",
        "additionalFields": {}
      },
      "id": "893553fb-dd4d-47ba-bd30-a9e416db593e",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1740,
        260
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect\nA.rej_booking,\nA.fuld_booking,\nA.fuld_listings,\nROUND(((A.fuld_booking::numeric/nullif(A.spec_req,0))*100),2) as AFR_rate,\nA.GMV,\nA.dur_fuld\nfrom\n(select\ncount(distinct case when ((b.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (b.status in ('withdrawn','cancelled') and b.reason ~* '(host|owner|avai|car)') or (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null))) then b.id end) as spec_req,\ncount(distinct case when b.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then b.id end) as fuld_booking,\ncount(distinct case when b.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then b.listing_id end) as fuld_listings,\ncount(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.id end) as rej_booking,\nsum(case when b.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') \nthen (case when d3.del_pickup_disc is null and d4.del_dropoff_disc is null then b.gross_amount \nelse b.gross_amount + coalesce(d1.del_pickup, 0) + coalesce(d2.del_dropoff, 0)\n- coalesce(d3.del_pickup_disc, 0) - coalesce(d4.del_dropoff_disc, 0) end) end) as GMV,\nsum(case when b.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') then (case when bl.pricing_id = '3' then 0.5\nwhen (extract(EPOCH from b.request_end_at) - extract(EPOCH from b.request_start_at))/86400 < 1 then 1\nwhen (extract(EPOCH from b.request_end_at)::int - extract(EPOCH from b.request_start_at)::int)%86400 < 2160 then\nfloor((extract(EPOCH from b.request_end_at) - extract(EPOCH from b.request_start_at))/86400)\nelse ceil((extract(EPOCH from b.request_end_at) - extract(EPOCH from b.request_start_at))/86400) end)end) as dur_fuld \nfrom bookings b \nleft join (select distinct listing_id, country, city_id from listing_location) ll on ll.listing_id = b.listing_id\nleft join booking_lines bl on bl.booking_id = b.id and bl.slug = 'rental-fee'\nleft join\n(select bl.booking_id, bl.amount as del_pickup from booking_lines bl where bl.slug = 'car-pick-up-fee') d1\non b.id = d1.booking_id\nleft join\n(select bl.booking_id, bl.amount as del_dropoff from booking_lines bl where bl.slug = 'car-drop-off-fee') d2\non b.id = d2.booking_id\nleft join\n(select bl.booking_id, bl.amount as del_pickup_disc from booking_lines bl where bl.slug = 'car-pick-up-discount-fee') d3\non b.id = d3.booking_id\nleft join\n(select bl.booking_id, bl.amount as del_dropoff_disc from booking_lines bl where bl.slug = 'car-drop-off-discount-fee') d4\non b.id = d4.booking_id\nwhere b.request_end_at >= '2023-01-18 00:00' and b.request_start_at <= '2023-01-31 23:59'\nand ll.country = 'Malaysia')A",
        "additionalFields": {}
      },
      "id": "400d793d-0ba9-4b4a-922e-7dc1b78d3e15",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1740,
        400
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 606814491,
          "mode": "list",
          "cachedResultName": "N8N Import",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=606814491"
        },
        "dataMode": "autoMapInputData",
        "columnToMatchOn": "timestamp",
        "options": {}
      },
      "id": "0826483a-a686-4f5a-972e-8d5c8289ec9d",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        2340,
        220
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "9acb22a6-a034-4809-8762-1086606e6e52",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1920,
        320
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "e480c75a-e748-48aa-80a0-38a00f47c47c",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2140,
        220
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect distinct l.id, \nl.registration_no, \nm.name as model,\ncase when ll.city_id in (1) then '1. KV'   \nwhen ll.city_id in (2,12) then '2. PG'\nwhen ll.city_id in (3,19,20,21) then '3. KK'  \nwhen ll.city_id in (4,15) then '4. JB' \nwhen ll.city_id in (5) then '5. IP' \nwhen ll.city_id in (47) then '6. NS'\nwhen ll.city_id in (13) then '7. LGK'\nelse '8. Others' end as city,\nl.user_id, \nconcat(u.first_name, ' ',u.last_name)as host_name, \nu.email, \nu.phone_number,\ncase when bj.rej_booking is null then '0' else bj.rej_booking end as rej_booking,\nla.avai_days,\ncase when bc.fuld_booking is null then '0' else bc.fuld_booking end as fuld_booking,\ncase when fd.fuld_days is null then '0' else fd.fuld_days end as fuld_days\nfrom listings l \nleft join users u on u.id = l.user_id\nleft join (select distinct listing_id, country, city_id from listing_location) ll on ll.listing_id = l.id\nleft join models m on m.id = l.model_id\n--\nleft join \n        (select distinct b.listing_id, \n        count(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.ref_no end) as rej_booking\n        from bookings b \n        where b.request_end_at >= '2022-12-16 00:00' and b.request_start_at <= '2023-01-02 23:59'\n        group by 1)bj\n        on bj.listing_id = l.id\n--\nleft join \n        (select distinct b.listing_id, \n        count(distinct case when b.status in ('completed','start_driving','waiting_for_inspection', 'return_car','accepted') then b.id end) as fuld_booking\n        from bookings b \n        where b.request_end_at >= '2022-12-16 00:00' and b.request_start_at <= '2023-01-02 23:59'\n        group by 1)bc\n        on bc.listing_id = l.id\n--\nleft join \n        (select l.id,\n        count(dates.ymd) as avai_days\n        from listings l\n        left join listing_availability la on la.listing_id=l.id\n        left join (SELECT generate_series(timestamp '2022-12-16', timestamp '2023-01-02', interval '1 day')::date ymd) dates on \n        dates.ymd between la.start_date::date and la.end_date::date\n        where l.status='approved' and l.deleted_at is null \n        GROUP BY 1)la\n        on la.id = l.id\n--\nleft join\n                (select distinct b.listing_id,\n                count(distinct dates.ymd) as fuld_days\n                from bookings b \n                left join listing_location ll on ll.listing_id = b.listing_id \n                join (SELECT generate_series(timestamp '2022-12-16', '2023-01-02' , interval '1 day')::date as ymd) dates \n                on dates.ymd between b.request_start_at::date and b.request_end_at::date\n                where b.status in ('completed','start_driving','waiting_for_inspection', 'return_car','accepted')\n                and ll.country = 'Malaysia'\n                group by 1)fd\n                on fd.listing_id = l.id\nwhere l.status = 'approved'\nand l.deleted_at is null\nand l.registration_no in ('TEST123',\n'NDF4198',\n'AMF5732',\n'W5029U',\n'VEN7757',\n'DEH1781',\n'WC2110G',\n'RT2667',\n'NDJ3994',\n'PLJ2419',\n'BRB760',\n'PMQ2919',\n'VHW7864',\n'SAC9115E',\n'VGV5448',\n'WXY1233',\n'WA9874L',\n'W6322U',\n'VK3651',\n'SYU4286',\n'VAA257',\n'ALT316',\n'PLR4335',\n'AMD722',\n'VEF4418',\n'VBJ6646',\n'KV6649E',\n'PMT8816',\n'JVK4005',\n'TCE4579',\n'SYV152',\n'JTN315',\n'KFL336',\n'SYU8932',\n'VEK8541',\n'BMW2522',\n'VAH903',\n'VHV4299',\n'AKJ8251',\n'AKX989',\n'RT6046',\n'ALD1170',\n'PNF2786',\n'PMV3547',\n'PNT3116',\n'VCX3664',\n'RY2118',\n'VFN1978',\n'VHG7106',\n'VGM550',\n'PLU2599',\n'VBF2002',\n'VCA493',\n'VN6372',\n'SYA6533',\n'VEM5981',\n'JTV190',\n'BNM645',\n'VDS1669',\n'DDY1505',\n'QM812K',\n'PNB4086',\n'VBB1124',\n'TBR8737',\n'VCY6362',\n'PPN1447',\n'TTB6482',\n'VHT7967',\n'XX654',\n'AKM8923',\n'KFF1607',\n'RAE7257',\n'PPM9517',\n'VEV3470',\n'WC927F',\n'VAJ7290',\n'NDR228',\n'VJR3279',\n'KV2015E',\n'VEN1009',\n'SU7229F',\n'VCC2260',\n'ALF2470',\n'PPQ3270',\n'VJV1181',\n'KV962E',\n'SYU9517',\n'VDT8946',\n'UM5001',\n'JTC8348',\n'VES7776',\n'SYV625',\n'SYV617',\n'WB1187S',\n'SYP3157',\n'VM7840',\n'PPF2888',\n'VJJ3024',\n'VBT5631',\n'E4430',\n'MBU12',\n'VBF5502',\n'SYW605',\n'SAB6632T',\n'VAW8372',\n'SAC2862E',\n'BQX6220',\n'VJJ9405',\n'JQQ1559',\n'PQJ5437',\n'VJA409',\n'AMK1141',\n'BPG6993',\n'W8634V',\n'SY137',\n'PQH6367',\n'SU6989G',\n'VHK149',\n'VDG2751',\n'PME9784',\n'JVA5501',\n'VAN8782',\n'VFY360',\n'VDQ4069',\n'AMN5367',\n'RAN3511',\n'QRM763',\n'VJQ1762',\n'SYS2336',\n'WYY8003',\n'BPJ7700',\n'UM8684',\n'SYR7252',\n'VBL5011',\n'ALH2126',\n'KV5683D',\n'VEJ5140',\n'FE6501',\n'JVH7252',\n'SYJ2',\n'JRS4171',\n'QS310J',\n'SYV1246',\n'VBV7066',\n'WVT9696',\n'VJK7729',\n'WA4905V',\n'ALC5082',\n'BPF7539',\n'JSB6697',\n'BNB6229',\n'MCY1338',\n'IIUM7769',\n'SK3829B',\n'UUM6337',\n'VHJ6203',\n'JRD2924',\n'BNE5203',\n'VCV9540',\n'SYF5553',\n'AMP2089',\n'VDS3868',\n'VHC326',\n'SB9595F',\n'JSD4166',\n'PKX8378',\n'SMA1008',\n'SYD2647',\n'WA2365W',\n'VBF9686',\n'BRD4619',\n'BQY2280',\n'MDN9191',\n'VGA3122',\n'JSX2837',\n'VDY750',\n'WA7793E',\n'VGM860',\n'VHT4267',\n'VHQ1387',\n'JTB8537',\n'VDB9250',\n'WC1147B',\n'VFJ6558',\n'VAU3845',\n'JSB4905',\n'VGA544',\n'SY1251',\n'VDJ5888',\n'VAA123',\n'VHU5728',\n'UU169',\n'KV3319E',\n'AJK25',\n'SU1102J',\n'JQT9292',\n'SAB2191P',\n'VEW3228',\n'VEW3228',\n'SB244E',\n'PLK8265',\n'BAMBEE42',\n'VCN6755',\n'PPK6521',\n'SMF9831',\n'PPU6746',\n'PMN8472',\n'PMP1293',\n'VBQ2963',\n'PLU30',\n'SWF3993',\n'SYA7458',\n'UTM60',\n'PLN4711',\n'VS6541',\n'PQL7250',\n'VHE7532',\n'SMF8227',\n'SU3923H',\n'AMP3927',\n'SWD2362',\n'SYQ6882',\n'NDM9293',\n'VBW8858',\n'SYU6304',\n'LG6862',\n'SYR7756',\n'SYU4191',\n'SAB1416W',\n'W9465L',\n'SAC8584A',\n'SYE9655',\n'SAA1045J',\n'SAB375T',\n'BPW1755',\n'VBR4362',\n'QS3868B',\n'PNU5266',\n'PP808',\n'JVG6590',\n'KV3748E',\n'SAB9895W',\n'SYV3751',\n'SYS9189',\n'PLQ7984',\n'TCC4900',\n'SYU8030',\n'QAB9290C',\n'QM3699A',\n'VJF7444',\n'VDJ4649',\n'SB9790F',\n'SYV1817',\n'SYK1124',\n'JVK4005',\n'WB2005F',\n'SU3834G',\n'SD8298T',\n'PLE9040',\n'VP5486',\n'G1M9465',\n'KV3774E',\n'KV4044E',\n'KV2405E',\n'KV6696E',\n'TCP4174',\n'KV8487E',\n'KV4380D',\n'KV4892D',\n'KV3736E',\n'KV7170D',\n'KV8440E',\n'VAD5421',\n'KEJ6591',\n'VFT8301',\n'WC5135G',\n'BPX8828',\n'VAB5639',\n'VN7676',\n'JQJ144',\n'SB9309C',\n'PMC9183',\n'VJB7231',\n'PLV212',\n'KV4887E',\n'KV3849E',\n'VCM9862',\n'VDK3715',\n'VJQ7519',\n'VAV9642',\n'WXV7298',\n'SYV1734',\n'SMD8500',\n'ALB1104',\n'PMQ6164',\n'PQA8015',\n'PMA5765',\n'PNL4154',\n'SB1368E',\n'VDN9073',\n'VK4945',\n'PMF884',\n'PMR9881',\n'JVL9881',\n'PPD9881',\n'PNH3173',\n'JTK4036',\n'MDG7035',\n'PNU3135',\n'SYQ6628',\n'PMC7598',\n'VCE5343',\n'VHW2653',\n'KV9678E',\n'VHA9312',\n'VAN6784',\n'BNQ5155',\n'VCM4397',\n'G2459',\n'VS6864',\n'JUF797',\n'SY3953',\n'VJB2318',\n'TCA3643',\n'VCK9391',\n'WC7906R',\n'VEQ1516',\n'KEX6676',\n'SAB8688X',\n'WWW9301',\n'VDF2392',\n'SSA1176A',\n'SU1176J',\n'PQE9913',\n'VU3695',\n'SD9013N',\n'ALG3347',\n'SYP8329',\n'WA271V',\n'ST5640Y',\n'SYP681',\n'SYR8853',\n'PMQ5308',\n'VHC326',\n'VBA2085',\n'WC9578P',\n'SMB97',\n'BDR7769',\n'KFA7986',\n'PKT6789',\n'WA8893G',\n'AMH4395',\n'SAC9868B',\n'NDH882',\n'W273V',\n'SS5033X',\n'RY2118',\n'WB2467E',\n'VEL8041',\n'SAC9262E',\n'VGJ2166',\n'VAR5911',\n'W5762V',\n'BMW3801',\n'SMF3280',\n'SMG2351',\n'W202P',\n'BNY1460',\n'AKD4867',\n'VHW2959',\n'SWA8608',\n'PMY7137',\n'CEH63',\n'SYU6304',\n'JSK474',\n'MALAYSIA634',\n'VHK115',\n'SK6515B',\n'BQL4513',\n'SYV582',\n'VJQ6651',\n'BAMBEE42',\n'BQY4706',\n'BQF720',\n'PMY7138',\n'W9850S',\n'PMP2649',\n'SWB8116',\n'Q8239',\n'VAA1251',\n'AKD4867',\n'PNR4472',\n'JRU2052',\n'VCM1027',\n'SYM3155',\n'VK8672',\n'ALQ5218',\n'VJB8465',\n'SYG7650',\n'VEB2287',\n'VJD8084',\n'VJB5815',\n'SYT8420',\n'SYU9123',\n'SYM9123',\n'WD8648F',\n'ST1507X',\n'KFF662',\n'KV8223E',\n'VFK992',\n'VAQ7561',\n'WC9429D',\n'VGC8955',\n'VFJ9402',\n'SYT9279',\n'KFF919',\n'VED5659',\n'MCS1141',\n'KEN1565',\n'VDY5876',\n'VHR5692',\n'WA975Q',\n'QAA7747U',\n'JQP1221',\n'SYW3219',\n'VHN9607',\n'VCQ2438',\n'TCL320',\n'VJS2589',\n'BPS8008',\n'SK8738D',\n'WB1352P',\n'RAA6254',\n'VFB3427',\n'PKP5778',\n'RS497',\n'VAA8641',\n'VDH9424',\n'WB8669P',\n'VHA1656',\n'JUU6816',\n'SYQ934',\n'VAN6045',\n'QTR616',\n'VHF2327',\n'WA8702Y',\n'SAC9491E',\n'PMY5357',\n'SYS9282',\n'SD4882T',\n'JUC291',\n'VF9224',\n'SWD2332',\n'PLG5568',\n'VDP522',\n'WWH7935',\n'VEF3308',\n'VCV5516',\n'SS8797V',\n'VBU4555',\n'JUJ5348',\n'AMC5458',\n'WXX9992',\n'PMF1141',\n'VBG3446',\n'VFJ1025',\n'BQF3824',\n'MDH8149',\n'AKX3080',\n'JQY6055',\n'VBK8924',\n'WC1528T',\n'SYR8280',\n'VT4062',\n'SYE1808',\n'SAC9961C',\n'JTL4102',\n'SYV5893',\n'JRX6327',\n'JUP5655',\n'SYG637',\n'AKS192',\n'DDM4053',\n'WC5661W',\n'BPE4264',\n'JTC233',\n'JUX3218',\n'VDN711',\n'QAB3060D',\n'FE8248',\n'VAY3704',\n'VDR5647',\n'VHH6374',\n'AJG5420',\n'',\n'TEST456',\n'VGQ4486',\n'VU1349',\n'NDD4314',\n'PQL2973',\n'VEF4089',\n'KV6648E',\n'JTC233',\n'JTM7322',\n'KFL4728',\n'VFX3405',\n'WSH829',\n'JVC4299',\n'VCW3161',\n'MCY6381',\n'VET5500',\n'JSV2299',\n'VW75',\n'WYQ1125',\n'VDH228',\n'SYU4717',\n'VEL6603',\n'MDD4069',\n'VBT5803',\n'VHB1735',\n'JVH336',\n'SYV2970',\n'VJS2531',\n'VBT7072',\n'AMK8495',\n'PQL3635',\n'AML3360',\n'SYS2291',\n'WYK7700',\n'VJM3442',\n'VHV5011',\n'SAC7F',\n'SYV1247',\n'VHT5091',\n'AMG2969',\n'SD1339T',\n'VAP3198',\n'JTC2411',\n'BPV5787',\n'DCR6094',\n'SYS860',\n'VBM9019',\n'VBC5882',\n'VBN173',\n'KV3781E',\n'JSK1495',\n'JUY8147',\n'SB54',\n'PQJ2782',\n'PMK930',\n'SK3993D',\n'IIUM118',\n'PQL7839',\n'SYT8277',\n'SK3923D',\n'SYT5769',\n'SU1636J',\n'SYR9219',\n'SYR7758',\n'SYE7702',\n'JVR7450',\n'SWD9895',\n'SYV3752',\n'SAC3701F',\n'SYU8060',\n'QM3699L',\n'ALE3561',\n'PPF2685',\n'KFJ3613',\n'WA9536B',\n'KV6676E',\n'G1M4370',\n'PMG5179',\n'SAC3056B',\n'KV6512D',\n'VJQ7526',\n'SWD139',\n'VG391',\n'VJK6442',\n'QM7035K',\n'SU6698J',\n'KV9679E',\n'DDT1774',\n'PNA6654',\n'SYQ3619',\n'SAC9860A',\n'PKL8684',\n'VJG4510',\n'WB6217H',\n'VGP3701',\n'AMF5737',\n'ST9820Y',\n'VJJ3748',\n'SMG2236',\n'WXY1233',\n'WB44S',\n'WRV9355',\n'W9099R',\n'JTU4069',\n'MCM1441',\n'AKP4303',\n'MALAYSIA436',\n'VJM6651',\n'SB54.',\n'SWD8226',\n'MCM1441',\n'VAA7115',\n'WC193Y',\n'PLF8978',\n'VAW4857',\n'VB3375',\n'SYV5938',\n'KDV8825',\n'BQC1331',\n'WD7745A',\n'JRQ6367',\n'TCL350',\n'VJL7265',\n'WC8495B',\n'SYB5062',\n'DDL4036',\n'VED5437',\n'VDJ4276',\n'SMG4668',\n'VBH9238',\n'VT1554',\n'MCX4999',\n'AMR3360',\n'KV114E',\n'VFQ1415',\n'KFK6648',\n'VCK7573',\n'VHP6643',\n'VJP455',\n'VEF4166',\n'MCV115',\n'VAT5500',\n'WB7344W',\n'AMN228',\n'SYV7021',\n'VBT5642',\n'AFS2222',\n'PQL2558',\n'SYP6833',\n'WVN2168',\n'SYT4847',\n'SYV1248',\n'SD3829T',\n'VCC2521',\n'VBR976',\n'SAB668R',\n'WA6474A',\n'VHA7847',\n'VBN175',\n'QS1024L',\n'JRF1014',\n'PPB6668',\n'ALX2022',\n'AHV4663',\n'PQM6933',\n'SME3923',\n'SYT2362',\n'SYU1663',\n'SYR7759',\n'SYT4849',\n'SAB6061V',\n'SYU8070',\n'PPF6260',\n'KV6976E',\n'RAD7988',\n'SS2150W',\n'VB375',\n'SYR5961',\n'KV6647E',\n'PMU3025',\n'WA6122D',\n'AMH8521',\n'VJJ899',\n'SY2072',\n'VB7932',\n'BNT7282',\n'MALAYSIA127',\n'BNK8061',\n'WC5716M',\n'G1M3257',\n'VDG9389',\n'VHS350',\n'VJL7292',\n'PPJ7669',\n'PQH5561',\n'PLQ5638',\n'PPA7527',\n'G1M3065',\n'VHP6624',\n'VJR9379',\n'VHW6635',\n'VFP9594',\n'AJD23',\n'DDE9166',\n'BQH228',\n'SYV6317',\n'SWE247',\n'SYU6346',\n'SAB3829K',\n'JRR4032',\n'SD8666N',\n'JQV8142',\n'VBN177',\n'AJQ7156',\n'QBF3348',\n'SMG1388',\n'SYR5717',\n'SYT4860',\n'SYV9550',\n'VAU8137',\n'PPN478.',\n'KV7881E',\n'SS3338C',\n'VF9578',\n'SWF3250',\n'KV6643E',\n'VJU6157',\n'AMH4390',\n'SAC3502A',\n'SS9819U',\n'VHU1426',\n'KEU4597',\n'VGT1331',\n'VJX380',\n'RAD6193',\n'KV4114E',\n'VDX9372',\n'VEV8270',\n'KFJ9106',\n'VGV8867',\n'W8286S',\n'BLH41',\n'BQX336',\n'JVE247',\n'SAC2363A',\n'DEG8666',\n'SAB7813A',\n'SK5312B',\n'VBN178',\n'QRQ3348',\n'SAC8328D',\n'SYR7763',\n'SYU617',\n'VAL6338',\n'KV1588E',\n'SS4401W',\n'VF9246',\n'KV6621E',\n'RAN3730',\n'PQH339',\n'EJA98',\n'RAJ8311',\n'JJJ311',\n'VCF3247',\n'VHF1331',\n'VFP4562',\n'VFK7394',\n'VBK8363',\n'WXX9799',\n'WWB1485',\n'VBN586',\n'JVP7262',\n'SD3348T',\n'SK2404B',\n'SU6668F',\n'RAK4943',\n'KFK6649',\n'PQJ278',\n'JTT7454',\n'BRQ2299',\n'VJF6892',\n'JSR2859',\n'SWE3348',\n'SYB2404',\n'KV5988E',\n'JQE5841',\n'VCT4919',\n'NDM5288',\n'KFK6647',\n'PQL6393',\n'VAG4309',\n'VHU4007',\n'SYT7748',\n'PLX3831',\n'SB7748F')\norder by 10 desc",
        "additionalFields": {}
      },
      "id": "c5009c4e-b476-47ef-bba0-95b4a41022f9",
      "name": "Postgres4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        380,
        780
      ],
      "credentials": {
        "postgres": {
          "id": "16",
          "name": "trevodb_recreated"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw",
          "mode": "list",
          "cachedResultName": "Share The Joy! Opt In (Project Ho-Ho Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 228360117,
          "mode": "list",
          "cachedResultName": "N8N - Listings & Performance",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw/edit#gid=228360117"
        },
        "dataMode": "autoMapInputData",
        "columnToMatchOn": "registration_no",
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "2531ff06-0814-4c96-ae19-46f7b6a75ada",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        600,
        780
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\n\nselect distinct ru.user_id as referred_user,\nru.referred_by as host_id,\ncount(distinct case when b.status = 'completed' then b.id end) as completed_bookings\nfrom (select ur.id, ur.referred_by, ur.user_id\nfrom user_referrals ur \nwhere 1=1\nand ur.created_at between '2022-12-16' and '2023-01-02'\nand ur.referred_by in ('1544310',\n'883569',\n'102858',\n'741414',\n'95700',\n'55',\n'40686',\n'70127',\n'1140171',\n'1692841',\n'1019575',\n'55',\n'99030',\n'906069',\n'1781232',\n'1213982',\n'587014',\n'1621386',\n'517313',\n'70127',\n'415393',\n'259352',\n'508536',\n'1417187',\n'182548',\n'532598',\n'508536',\n'1767072',\n'46550',\n'756223',\n'1728157',\n'543935',\n'517313',\n'38331',\n'1560172',\n'32215',\n'87854',\n'85616',\n'1002354',\n'83898',\n'954165',\n'936319',\n'94951',\n'1070475',\n'1371084',\n'1560172',\n'742',\n'83898',\n'1483996',\n'916851',\n'526',\n'87257',\n'160754',\n'905214',\n'1408629',\n'46806',\n'1211952',\n'89213',\n'88955',\n'1327598',\n'93080',\n'864449',\n'1690902',\n'196',\n'596366',\n'1024815',\n'283644',\n'405330',\n'50832',\n'1792432',\n'167631',\n'28',\n'8833',\n'786253',\n'72504',\n'72662',\n'43216',\n'1370334',\n'882465',\n'1548338',\n'1110240',\n'42740',\n'196',\n'1785148',\n'283644',\n'191913',\n'82203',\n'1548023',\n'1272523',\n'597564',\n'1680157',\n'259352',\n'92593',\n'8833',\n'973395',\n'38331',\n'44737',\n'1043596',\n'31229',\n'106416',\n'1266647',\n'1518624',\n'1380530',\n'46071',\n'82416',\n'15848',\n'104476',\n'879330',\n'405330',\n'46071',\n'44737',\n'55',\n'3416',\n'31698',\n'113951',\n'1686287',\n'774175',\n'83051',\n'154957',\n'81995',\n'1346967',\n'8833',\n'430743',\n'1110240',\n'90087',\n'905214',\n'106416',\n'1004992',\n'1602420',\n'539271',\n'1001824',\n'46550',\n'1702228',\n'275009',\n'564787',\n'259352',\n'68370',\n'439390',\n'760777',\n'217493',\n'1380530',\n'244211',\n'57924',\n'48960',\n'741414',\n'1314368',\n'87257',\n'87257',\n'163',\n'1593875',\n'48803',\n'81614',\n'526',\n'5162',\n'439390',\n'744783',\n'58937',\n'50826',\n'866940',\n'756223',\n'1314368',\n'1405645',\n'995716',\n'34411',\n'1502324',\n'37712',\n'1533288',\n'1370476',\n'1567142',\n'737906',\n'1656931',\n'1766883',\n'1098431',\n'954165',\n'1728157',\n'1605353',\n'1649137',\n'1848140',\n'1556143',\n'80844',\n'78103',\n'460900',\n'823816',\n'742',\n'1646364',\n'1380530',\n'320',\n'75521',\n'66902',\n'64522',\n'78178',\n'14452',\n'82506',\n'120252',\n'212229',\n'241544',\n'97503',\n'124086',\n'460900',\n'94302',\n'777020',\n'717155',\n'760777',\n'92561',\n'344308',\n'564787',\n'1054251',\n'450963',\n'58937',\n'579140',\n'81067',\n'612861',\n'93080',\n'835761',\n'951300',\n'943138',\n'82506',\n'1422813',\n'163',\n'1483996',\n'1579998',\n'1579998',\n'911833',\n'359547',\n'1328702',\n'1621386',\n'980908',\n'1593875',\n'998476',\n'1576941',\n'259352',\n'737332',\n'1613293',\n'1655543',\n'64327',\n'859956',\n'1764628',\n'1727370',\n'760777',\n'1695209',\n'1646364',\n'655488',\n'1747081',\n'1822268',\n'1873271',\n'82304',\n'1382241',\n'31534',\n'1704502',\n'1380530',\n'1569154',\n'1751078',\n'1380530',\n'1346967',\n'3416',\n'55',\n'68825',\n'96868',\n'124086',\n'57062',\n'120252',\n'120252',\n'212229',\n'344308',\n'34411',\n'212229',\n'501994',\n'613542',\n'564787',\n'259352',\n'259352',\n'344308',\n'69770',\n'79964',\n'93080',\n'57351',\n'936319',\n'344308',\n'58937',\n'1131189',\n'11182',\n'64327',\n'756223',\n'259352',\n'79964',\n'878200',\n'1260967',\n'344308',\n'31534',\n'36367',\n'864449',\n'737906',\n'760777',\n'259352',\n'1567018',\n'50832',\n'344308',\n'823816',\n'1533288',\n'1368061',\n'866940',\n'35874',\n'50832',\n'94713',\n'65335',\n'85642',\n'30507',\n'1653937',\n'1426894',\n'75521',\n'1640431',\n'299369',\n'85861',\n'613530',\n'262055',\n'1594773',\n'936319',\n'9244',\n'1481008',\n'1730437',\n'587014',\n'587014',\n'85642',\n'1667621',\n'1796148',\n'1807704',\n'1754076',\n'344308',\n'134249',\n'1640431',\n'1826888',\n'1646364',\n'1823686',\n'1808757',\n'1107418',\n'1646364',\n'1646364',\n'146505',\n'1764628',\n'1406705',\n'1649335',\n'55',\n'1800661',\n'1646364',\n'788538',\n'320366',\n'835761',\n'864449',\n'739892',\n'65123',\n'1594773',\n'1631098',\n'1131311',\n'125625',\n'1740388',\n'1752490',\n'733467',\n'1823686',\n'1646364',\n'82596',\n'188643',\n'25330',\n'92561',\n'1551948',\n'1314368',\n'1161113',\n'8833',\n'460900',\n'1737895',\n'44530',\n'111646',\n'864449',\n'106416',\n'57351',\n'89213',\n'1552332',\n'1518624',\n'1002354',\n'50197',\n'87257',\n'102537',\n'85861',\n'262573',\n'262573',\n'176936',\n'59258',\n'81067',\n'439390',\n'577201',\n'684922',\n'112171',\n'69590',\n'760777',\n'704538',\n'79964',\n'867053',\n'775306',\n'951935',\n'179122',\n'25190',\n'25190',\n'344308',\n'52504',\n'32215',\n'92664',\n'262261',\n'259352',\n'58937',\n'1161113',\n'1288741',\n'526',\n'120252',\n'176936',\n'176936',\n'188643',\n'760777',\n'1443798',\n'839440',\n'839440',\n'473536',\n'1382241',\n'176936',\n'93080',\n'756223',\n'1504223',\n'13209',\n'439629',\n'344308',\n'77065',\n'1338809',\n'74415',\n'57351',\n'31534',\n'25190',\n'1649137',\n'998476',\n'1650099',\n'684922',\n'864449',\n'1211952',\n'259352',\n'926665',\n'1613293',\n'1502324',\n'1040128',\n'75521',\n'36367',\n'1718013',\n'64327',\n'895345',\n'87250',\n'1736757',\n'1481026',\n'691981',\n'1489844',\n'1808757',\n'1808757',\n'577201',\n'1821839',\n'1337956',\n'1747081',\n'146505',\n'1580873',\n'285836',\n'1350872',\n'1728157',\n'68825',\n'548933',\n'1265113',\n'89213',\n'31534',\n'31534',\n'777659',\n'564787',\n'78238',\n'176936',\n'50832',\n'1592458',\n'69509',\n'1580873',\n'89213',\n'58627',\n'93080',\n'145002',\n'439629',\n'88807',\n'1233648',\n'1513826',\n'79964',\n'124086',\n'50832',\n'973395',\n'1601687',\n'25691',\n'382833',\n'81995',\n'768504',\n'98738',\n'1807704',\n'1086194',\n'1814475',\n'565924',\n'995716',\n'1148234',\n'71042',\n'550525',\n'482512',\n'367036',\n'1662865',\n'1569154',\n'1480475',\n'1753803',\n'1518624',\n'87055',\n'124086',\n'1380530',\n'1518624',\n'403623',\n'526',\n'526',\n'196',\n'74134',\n'57668',\n'81067',\n'94106',\n'526',\n'120252',\n'124086',\n'262573',\n'262573',\n'418650',\n'57062',\n'46071',\n'573320',\n'176936',\n'30507',\n'760777',\n'1113490',\n'768504',\n'1107418',\n'79851',\n'936319',\n'344308',\n'684922',\n'1282223',\n'1265113',\n'299369',\n'1382241',\n'31534',\n'1337956',\n'414692',\n'671772',\n'1454506',\n'1844',\n'839440',\n'85642',\n'58937',\n'1527648',\n'113071',\n'75521',\n'1643608',\n'684922',\n'344308',\n'55',\n'1481008',\n'1680157',\n'564216',\n'515835',\n'760777',\n'680875',\n'46362',\n'1649335',\n'94302',\n'1356852',\n'55554',\n'1417187',\n'1808757',\n'196778',\n'212229',\n'31534',\n'851965',\n'62231',\n'911833',\n'1499923',\n'1522686',\n'138802',\n'1887856',\n'869699',\n'163',\n'867053',\n'869699',\n'1004992',\n'1800267',\n'1471045',\n'945695',\n'1813475',\n'1417187',\n'1595405',\n'1115150',\n'81995',\n'1310560',\n'299369',\n'1613409',\n'1702228',\n'299369',\n'1650266',\n'1518624',\n'393957',\n'39299',\n'113801',\n'1034977',\n'51595',\n'1518624',\n'837383',\n'82416',\n'1518624',\n'99098',\n'272873',\n'106212',\n'89213',\n'1846907',\n'44737',\n'1767072',\n'836802',\n'25190',\n'526',\n'76024',\n'82304',\n'25190',\n'262573',\n'262573',\n'31534',\n'31534',\n'384097',\n'44737',\n'81995',\n'11423',\n'325533',\n'704538',\n'240490',\n'684922',\n'564787',\n'579140',\n'44737',\n'50832',\n'738401',\n'347987',\n'950903',\n'1086194',\n'756223',\n'376826',\n'134249',\n'1334510',\n'839440',\n'839440',\n'1004992',\n'1525292',\n'70782',\n'386175',\n'1506630',\n'1594684',\n'993245',\n'154154',\n'1110240',\n'75521',\n'1695209',\n'154276',\n'696840',\n'543935',\n'79685',\n'344029',\n'1560172',\n'82304',\n'1560172',\n'325533',\n'1646364',\n'82416',\n'82304',\n'1888383',\n'1619409',\n'1726387',\n'305964',\n'950903',\n'1487157',\n'120252',\n'672945',\n'612834',\n'696840',\n'82304',\n'69528',\n'113801',\n'774175',\n'181411',\n'82203',\n'63269',\n'57926',\n'60705',\n'950903',\n'1702228',\n'325533',\n'1380530',\n'1211952',\n'113801',\n'506309',\n'113801',\n'509913',\n'573297',\n'42740',\n'774175',\n'39299',\n'515142',\n'93080',\n'81995',\n'1306569',\n'299369',\n'774175',\n'113801',\n'106416',\n'1518624',\n'1702228',\n'1560172',\n'687631',\n'1650266',\n'50832',\n'1211779',\n'81995',\n'124086',\n'320366',\n'307858',\n'82416',\n'1767072',\n'1767072',\n'1819605',\n'1827218',\n'12907',\n'92919',\n'99935',\n'100767',\n'478114',\n'68370',\n'36367',\n'680149',\n'756223',\n'788538',\n'680149',\n'936319',\n'28',\n'509913',\n'89213',\n'89213',\n'881184',\n'31534',\n'12907',\n'680149',\n'1678674',\n'152287',\n'1764725',\n'839515',\n'1569154')\ngroup by 1,2,3) ru \nleft join bookings b on b.user_id = ru.user_id\nand b.request_start_at between '2022-12-16' and '2023-01-02'\ngroup by 1,2\n",
        "additionalFields": {}
      },
      "id": "03884387-57b1-46d6-9bd8-ba953fd8e414",
      "name": "Postgres5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        600,
        920
      ],
      "credentials": {
        "postgres": {
          "id": "16",
          "name": "trevodb_recreated"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw",
          "mode": "list",
          "cachedResultName": "Share The Joy! Opt In (Project Ho-Ho Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 333487071,
          "mode": "list",
          "cachedResultName": "N8N - New User Referral",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw/edit#gid=333487071"
        },
        "dataMode": "autoMapInputData",
        "columnToMatchOn": "referred_user",
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "49c79dd2-0b9c-432b-96e1-ab819539e4b0",
      "name": "Google Sheets2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        800,
        920
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw",
          "mode": "list",
          "cachedResultName": "Share The Joy! Opt In (Project Ho-Ho Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 333487071,
          "mode": "list",
          "cachedResultName": "N8N - New User Referral",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w1vhZx-1SOTXE9BCMmw3ljCIQ3xp6JIqHQLMNKxZ4aw/edit#gid=333487071"
        },
        "clear": "specificRows",
        "startIndex": 2,
        "rowsToDelete": 400
      },
      "id": "6b553749-8257-4f96-a32b-b6d3a3cf06c4",
      "name": "Google Sheets3",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        380,
        920
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      },
      "id": "3159fcff-b2ec-4214-a637-0f4a59e0546f",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        1200,
        640
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "timestamp",
              "value": "={{ $json[\"Year\"] }}"
            }
          ],
          "number": [
            {
              "name": "timestamp2",
              "value": "={{ $json[\"Readable date\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "caf6a0ab-8c0b-4c27-a133-e971ee6d126b",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1740,
        120
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect \n\tcount(distinct case when ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as special_req,\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') then A.ref_no end) as fuld_booking,\n\tcount(distinct case when (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as rej_booking,\n\t--One-day\n\tcount(distinct case when A.dur = 1 and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as special_req_1_day,\n\tcount(distinct case when A.dur = 1 and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as fuld_1_day,\n\tcount(distinct case when A.dur = 1 and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as rej_booking_day1,\n\t--Next-1/2-Day\n\tcount(distinct case when A.requested_start_lag <= '2' and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as special_req_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as fuld_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as rej_booking_next_day,\n\t--\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') and A.dur > 5 then A.ref_no end)as bookings_more_than_5_days\n\tfrom\n\t(select distinct b.ref_no, \n\tb.listing_id, \n\tl.url,\n\tbr.name as brand,\n\tm.name as model, \n\tlp.base_price,\n\tcase when ll.city_id in (1) then '1. KV'   \n\twhen ll.city_id in (2,12) then '2. PG'\n\twhen ll.city_id in (3,19,20,21) then '3. KK'  \n\twhen ll.city_id in (4,15) then '4. JB' \n\twhen ll.city_id in (5) then '5. IP' \n\twhen ll.city_id in (47) then '6. NS'\n\twhen ll.city_id in (13) then '7. LGK'\n\telse '8. Others' end as city,\n\tll.address,\n\tl.allow_delivery,\n\tl.is_instant,\n\tcase when pp.id = '1' then 'yes'\n\telse 'no' end as longterm,\n\tm.year,\n\tu.id, \n\tconcat(u.first_name,' ',u.last_name) as display_name,\n\tu.email, \n\tu.phone_number,\n\tb.status,\n\tb.reason,\n\tb.created_at,\n\tb.request_start_at::timestamp,\n\tb.request_end_at::timestamp,\n\t(EXTRACT(EPOCH FROM b.request_end_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/86400::integer as requested_start_lag,\n\tcase when bl.pricing_id = '3' then 0.5\n\twhen (extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400 < 1 then 1\n\twhen (extract(EPOCH from b.request_end_at::timestamp)::int - extract(EPOCH from b.request_start_at::timestamp)::int)%86400 < 2160 then\n\tfloor((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400)\n\telse ceil((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400) end as dur\n\tfrom bookings b \n\tleft join listings l on l.id = b.listing_id \n\tleft join \n\t\t(select distinct ll.listing_id, \n\t\tll.country, \n\t\tll.city_id, \n\t\tconcat(ll.address_line_1,' ',ll.address_line_2,' ',ll.postal_code,' ',ll.country) as address,\n\t\tll.updated_at\n\t\tfrom listing_location ll\n\t\tjoin \n\t\t\t(select distinct ll.listing_id, \n\t\t\tmax(ll.updated_at)as updated_at\n\t\t\tfrom listing_location ll\n\t\t\tgroup by 1)max\n\t\t\ton max.listing_id = ll.listing_id and max.updated_at = ll.updated_at) ll \n\t\ton ll.listing_id = l.id\n\tleft join listing_pricing lp on lp.listing_id = l.id\n\tleft join pricing_policies pp on pp.id = lp.pricing_policy_id\n\tleft join models m on m.id = l.model_id \n\tleft join brands br on br.id = m.brand_id \n\tleft join users u on u.id = l.user_id \n\tleft join listing_availability la on la.listing_id = l.id\n\tleft join booking_lines bl on bl.booking_id = b.id\n\twhere l.status = 'approved'\n\tand l.deleted_at is null\n\tand ll.country = 'Malaysia'\n\tand (b.request_start_at between '2023-01-18 00:00' and '2023-01-19 23:59'\n\tor b.request_start_at between '2023-01-24 00:00' and '2023-01-26 23:59'\n\tor b.request_start_at between '2023-01-30 00:00' and '2023-01-31 23:59'))A\n\n\t",
        "additionalFields": {}
      },
      "id": "21638fb5-08ac-40e9-9f9f-4f3b11261ce7",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1740,
        580
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1023703382,
          "mode": "list",
          "cachedResultName": "N8N Import (All Host Dashboard B)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1023703382"
        },
        "dataMode": "autoMapInputData",
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "6a93ee33-195a-415a-a257-a21431c80277",
      "name": "Google Sheets4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        2120,
        640
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect distinct l.id, \nl.registration_no, \nm.name as model,\ncase when ll.city_id in (1) then '1. KV'   \nwhen ll.city_id in (2,12) then '2. PG'\nwhen ll.city_id in (3,19,20,21) then '3. KK'  \nwhen ll.city_id in (4,15) then '4. JB' \nwhen ll.city_id in (5) then '5. IP' \nwhen ll.city_id in (47) then '6. NS'\nwhen ll.city_id in (13) then '7. LGK'\nelse '8. Others' end as city,\nl.user_id, \nconcat(u.first_name, ' ',u.last_name)as host_name, \nu.email, \nu.uuid,\nu.phone_number,\nola.overall_avai_days,\ncase when obj.ov_rej_booking is null then '0' else obj.ov_rej_booking end as overall_rej_booking,\ncase when obj.unfair_rej_booking is null then '0' else obj.unfair_rej_booking end as unfair_rej_booking,\ncase when obj.real_rej_booking is null then '0' else obj.real_rej_booking end as real_rej_booking,\ncase when obf.overall_fuld_booking is null then '0' else obf.overall_fuld_booking end as overall_fuld_booking,\ncase when wbj.ov_rej_booking is null then '0' else wbj.ov_rej_booking end as weekend_overall_rej_booking,\ncase when wbj.unfair_rej_booking is null then '0' else wbj.unfair_rej_booking end as weekend_unfair_rej_booking,\ncase when wbj.real_rej_booking is null then '0' else wbj.real_rej_booking end as weekend_real_rej_booking,\nwla.weekend_avai_days,\ncase when wbf.weekend_fuld_booking is null then '0' else wbf.weekend_fuld_booking end as weekend_fuld_booking\nfrom listings l \nleft join users u on u.id = l.user_id\nleft join (select distinct listing_id, country, city_id from listing_location) ll on ll.listing_id = l.id\nleft join models m on m.id = l.model_id\nleft join companies c on c.owner_id = l.user_id\n--\nleft join \n        (select distinct b.listing_id, \n        count(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.ref_no end) as ov_rej_booking,\n\t\tcount(distinct case when (b.reason = 'Host is taking a long time to respond' and ((extract(EPOCH FROM b.updated_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/3600::integer)< '2' ) then b.ref_no end)as unfair_rej_booking,\n\t\tCOALESCE(count(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.ref_no end) - count(distinct case when (b.reason = 'Host is taking a long time to respond' and ((extract(EPOCH FROM b.updated_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/3600::integer)< '2' ) then b.ref_no end),0) as real_rej_booking  \n        from bookings b \n        where b.request_end_at::timestamp >= '2023-01-18 00:00' and b.request_start_at::timestamp <= '2023-01-31 23:59'\n        group by 1)obj\n        on obj.listing_id = l.id\n--\nleft join \n        (select distinct b.listing_id, \n        count(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.ref_no end) as ov_rej_booking,\n\t\tcount(distinct case when (b.reason = 'Host is taking a long time to respond' and ((extract(EPOCH FROM b.updated_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/60::integer)< '20' ) then b.ref_no end)as unfair_rej_booking,\n\t\tCOALESCE(count(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.ref_no end) - count(distinct case when (b.reason = 'Host is taking a long time to respond' and ((extract(EPOCH FROM b.updated_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/60::integer)< '20' ) then b.ref_no end),0) as real_rej_booking\n        from bookings b \n        where (b.request_start_at::timestamp between '2023-01-20 00:00' and '2023-01-23 23:59') or (b.request_start_at::timestamp between '2023-01-27 00:00' and '2023-01-29 23:59')\n        group by 1)wbj\n        on wbj.listing_id = l.id\n--\nleft join \n        (select distinct b.listing_id, \n        count(distinct case when b.status in ('completed','start_driving','waiting_for_inspection', 'return_car','accepted') then b.id end) as overall_fuld_booking\n        from bookings b \n        where b.request_end_at::timestamp >= '2023-01-18 00:00' and b.request_start_at::timestamp <= '2023-01-31 23:59'\n        group by 1)obf\n        on obf.listing_id = l.id\n--\nleft join \n        (select distinct b.listing_id, \n        count(distinct case when b.status in ('completed','start_driving','waiting_for_inspection', 'return_car','accepted') then b.id end) as weekend_fuld_booking\n        from bookings b \n        where (b.request_start_at::timestamp between '2023-01-20 00:00' and '2023-01-23 23:59') or (b.request_start_at::timestamp between '2023-01-27 00:00' and '2023-01-29 23:59')\n        group by 1)wbf\n        on wbf.listing_id = l.id\n--\nleft join \n        (select l.id,\n        count(dates.ymd) as overall_avai_days\n        from listings l\n        left join listing_availability la on la.listing_id=l.id\n        left join (SELECT generate_series(timestamp '2023-01-18', timestamp '2023-01-31', interval '1 day')::date ymd) dates on \n        dates.ymd between la.start_date::date and la.end_date::date\n        where l.status='approved' and l.deleted_at is null \n        GROUP BY 1)ola\n        on ola.id = l.id\n--\nleft join \n        (select l.id,\n        count(case when (dates.ymd between '2023-01-20' and '2023-01-23') or (dates.ymd between '2023-01-27' and '2023-01-29') then dates.ymd end) as weekend_avai_days\n        from listings l\n        left join listing_availability la on la.listing_id=l.id\n        left join (SELECT generate_series(timestamp '2023-01-18', timestamp '2023-01-31', interval '1 day')::date ymd) dates on \n        dates.ymd between la.start_date::date and la.end_date::date\n        where l.status='approved' and l.deleted_at is null\n        GROUP BY 1)wla\n        on wla.id = l.id\nwhere l.status = 'approved'\nand l.deleted_at is null\nand ((c.owner_id is null) or (l.user_id in (942862,344308,756223,31534,176936,551568,59693,120252,113801,483725,839440,760777,59551,58937,725875,797829,810417,1415199,1594773,50832,684922,1387955,548329,259352,81472,399266,79964,92561,93080,177014,89213,925742,758921,46071,1072616,1751078,82304)))\nand l.registration_no in ({{ $json[\"String\"] }})\norder by 10 desc",
        "additionalFields": {}
      },
      "id": "b4d1efb2-bf2b-470f-ad30-935d15815acc",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1960,
        1540
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1908020212,
          "mode": "list",
          "cachedResultName": "N8N Import (Performance)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1908020212"
        },
        "dataMode": "autoMapInputData",
        "columnToMatchOn": "registration_no",
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "daf98947-edd9-404a-a1c6-006374622ab2",
      "name": "Google Sheets6",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        2200,
        1540
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1908020212,
          "mode": "list",
          "cachedResultName": "N8N Import (Performance)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1908020212"
        },
        "clear": "specificRange",
        "range": "A2:Z"
      },
      "id": "002975fa-5b6c-4f6d-9736-c5e10d75f417",
      "name": "Google Sheets7",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1560,
        1540
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 782357221,
          "mode": "list",
          "cachedResultName": "Registration No",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=782357221"
        },
        "options": {}
      },
      "id": "0367635e-fdba-40b1-b4e5-22c3eec8d88c",
      "name": "Google Sheets8",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1740,
        1540
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "content": "Each Listings performance tracker automation\n",
        "height": 80,
        "width": 180.01268428372722
      },
      "id": "fe7f689a-f5dc-447f-a040-7edf1f84c104",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        1540
      ]
    },
    {
      "parameters": {
        "content": "(A) Incentive Period (All Hosts) Dashboard",
        "height": 80,
        "width": 178.9018080667592
      },
      "id": "b58f7eb0-bf9c-4b97-89fc-539ad36a3169",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        280
      ]
    },
    {
      "parameters": {
        "content": "(B) Incentive Period (All Hosts) Dashboard",
        "height": 80,
        "width": 178.9018080667592
      },
      "id": "7fd72556-72b6-4ef5-932f-882afb18a0e9",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        640
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect\ncount(dates.ymd) as Total_Days_avai\nfrom listings l \nleft join listing_availability la on la.listing_id = l.id \nleft join (select distinct listing_id, country, city_id from listing_location) ll on ll.listing_id = l.id\njoin (SELECT generate_series(timestamp '2023-01-18', timestamp '2023-01-31', interval '1 day')::date ymd) dates on \ndates.ymd between la.start_date::date and la.end_date::date\nwhere ll.country = 'Malaysia'\nand l.registration_no in ({{ $json[\"String\"] }})",
        "additionalFields": {}
      },
      "id": "f7c0b206-8bcc-46d3-ac06-19e41dd0ac08",
      "name": "Postgres3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1920,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect\nA.rej_booking,\nA.fuld_booking,\nA.fuld_listings,\nROUND(((A.fuld_booking::numeric/nullif(A.spec_req,0))*100),2) as AFR_rate,\nA.GMV,\nA.dur_fuld\nfrom\n(select\ncount(distinct case when ((b.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (b.status in ('withdrawn','cancelled') and b.reason ~* '(host|owner|avai|car)') or (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null))) then b.id end) as spec_req,\ncount(distinct case when b.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then b.id end) as fuld_booking,\ncount(distinct case when b.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then b.listing_id end) as fuld_listings,\ncount(distinct case when (b.status = 'rejected' and (b.reason !~* '(guest)' or b.reason is null)) or (b.status in ('withdrawn', 'cancelled') and b.reason ~* '(host|owner|avai|car)') then b.id end) as rej_booking,\nsum(case when b.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') \nthen (case when d3.del_pickup_disc is null and d4.del_dropoff_disc is null then b.gross_amount \nelse b.gross_amount + coalesce(d1.del_pickup, 0) + coalesce(d2.del_dropoff, 0)\n- coalesce(d3.del_pickup_disc, 0) - coalesce(d4.del_dropoff_disc, 0) end) end) as GMV,\nsum(case when b.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') then (case when bl.pricing_id = '3' then 0.5\nwhen (extract(EPOCH from b.request_end_at) - extract(EPOCH from b.request_start_at))/86400 < 1 then 1\nwhen (extract(EPOCH from b.request_end_at)::int - extract(EPOCH from b.request_start_at)::int)%86400 < 2160 then\nfloor((extract(EPOCH from b.request_end_at) - extract(EPOCH from b.request_start_at))/86400)\nelse ceil((extract(EPOCH from b.request_end_at) - extract(EPOCH from b.request_start_at))/86400) end)end) as dur_fuld \nfrom bookings b \njoin listings l on l.id = b.listing_id\nleft join (select distinct listing_id, country, city_id from listing_location) ll on ll.listing_id = b.listing_id\nleft join booking_lines bl on bl.booking_id = b.id and bl.slug = 'rental-fee'\nleft join\n(select bl.booking_id, bl.amount as del_pickup from booking_lines bl where bl.slug = 'car-pick-up-fee') d1\non b.id = d1.booking_id\nleft join\n(select bl.booking_id, bl.amount as del_dropoff from booking_lines bl where bl.slug = 'car-drop-off-fee') d2\non b.id = d2.booking_id\nleft join\n(select bl.booking_id, bl.amount as del_pickup_disc from booking_lines bl where bl.slug = 'car-pick-up-discount-fee') d3\non b.id = d3.booking_id\nleft join\n(select bl.booking_id, bl.amount as del_dropoff_disc from booking_lines bl where bl.slug = 'car-drop-off-discount-fee') d4\non b.id = d4.booking_id\nwhere b.request_end_at >= '2023-01-18 00:00' and b.request_start_at <= '2023-01-31 23:59'\nand ll.country = 'Malaysia'\nand l.registration_no in ({{ $json[\"String\"] }}))A",
        "additionalFields": {}
      },
      "id": "c673cf0f-3482-42ca-9096-02f3dcec5852",
      "name": "Postgres7",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1920,
        1020
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "eb398e0d-a1f3-4091-9e51-3be4a28f3f67",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2140,
        940
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1758903430,
          "mode": "list",
          "cachedResultName": "N8N Import (Opt-in Host Dashboard A)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1758903430"
        },
        "dataMode": "autoMapInputData",
        "columnToMatchOn": "total_days_avai",
        "options": {}
      },
      "id": "9243b529-68fb-4f2e-be2b-a356e3c42c18",
      "name": "Google Sheets9",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        2320,
        940
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 782357221,
          "mode": "list",
          "cachedResultName": "Registration No",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=782357221"
        },
        "options": {}
      },
      "id": "fabfe509-2943-4aba-a176-3fa733d99adf",
      "name": "Google Sheets10",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1740,
        1020
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "content": "(A) Incentive Period (Opt-in Hosts) Dashboard",
        "height": 80,
        "width": 178.9018080667592
      },
      "id": "b9f2fb14-e697-4d8c-a5e1-4cb49ffdbc0f",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        940
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\nselect \n\tcount(distinct case when ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as special_req,\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') then A.ref_no end) as fuld_booking,\n\tcount(distinct case when (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as rej_booking,\n\t--One-day\n\tcount(distinct case when A.dur = 1 and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as special_req_1_day,\n\tcount(distinct case when A.dur = 1 and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as fuld_1_day,\n\tcount(distinct case when A.dur = 1 and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as rej_booking_day1,\n\t--Next-1/2-Day\n\tcount(distinct case when A.requested_start_lag <= '2' and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as special_req_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as fuld_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as rej_booking_next_day,\n\t--\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') and A.dur > 5 then A.ref_no end)as bookings_more_than_5_days\n\tfrom\n\t(select distinct b.ref_no, \n\tb.listing_id, \n\tl.url,\n\tbr.name as brand,\n\tm.name as model, \n\tlp.base_price,\n\tcase when ll.city_id in (1) then '1. KV'   \n\twhen ll.city_id in (2,12) then '2. PG'\n\twhen ll.city_id in (3,19,20,21) then '3. KK'  \n\twhen ll.city_id in (4,15) then '4. JB' \n\twhen ll.city_id in (5) then '5. IP' \n\twhen ll.city_id in (47) then '6. NS'\n\twhen ll.city_id in (13) then '7. LGK'\n\telse '8. Others' end as city,\n\tll.address,\n\tl.allow_delivery,\n\tl.is_instant,\n\tcase when pp.id = '1' then 'yes'\n\telse 'no' end as longterm,\n\tm.year,\n\tu.id, \n\tconcat(u.first_name,' ',u.last_name) as display_name,\n\tu.email, \n\tu.phone_number,\n\tb.status,\n\tb.reason,\n\tb.created_at,\n\tb.request_start_at::timestamp,\n\tb.request_end_at::timestamp,\n\t(EXTRACT(EPOCH FROM b.request_end_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/86400::integer as requested_start_lag,\n\tcase when bl.pricing_id = '3' then 0.5\n\twhen (extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400 < 1 then 1\n\twhen (extract(EPOCH from b.request_end_at::timestamp)::int - extract(EPOCH from b.request_start_at::timestamp)::int)%86400 < 2160 then\n\tfloor((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400)\n\telse ceil((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400) end as dur\n\tfrom bookings b \n\tjoin listings l on l.id = b.listing_id \n\tleft join \n\t\t(select distinct ll.listing_id, \n\t\tll.country, \n\t\tll.city_id, \n\t\tconcat(ll.address_line_1,' ',ll.address_line_2,' ',ll.postal_code,' ',ll.country) as address,\n\t\tll.updated_at\n\t\tfrom listing_location ll\n\t\tjoin \n\t\t\t(select distinct ll.listing_id, \n\t\t\tmax(ll.updated_at)as updated_at\n\t\t\tfrom listing_location ll\n\t\t\tgroup by 1)max\n\t\t\ton max.listing_id = ll.listing_id and max.updated_at = ll.updated_at) ll \n\t\ton ll.listing_id = l.id\n\tleft join listing_pricing lp on lp.listing_id = l.id\n\tleft join pricing_policies pp on pp.id = lp.pricing_policy_id\n\tleft join models m on m.id = l.model_id \n\tleft join brands br on br.id = m.brand_id \n\tleft join users u on u.id = l.user_id \n\tleft join listing_availability la on la.listing_id = l.id\n\tleft join booking_lines bl on bl.booking_id = b.id\n\twhere l.status = 'approved'\n\tand l.deleted_at is null\n\tand ll.country = 'Malaysia'\n\tand l.registration_no in ({{ $json[\"String\"] }})\n\tand (b.request_start_at between '2023-01-18 00:00' and '2023-01-19 23:59'\n\tor b.request_start_at between '2023-01-24 00:00' and '2023-01-26 23:59'\n\tor b.request_start_at between '2023-01-30 00:00' and '2023-01-31 23:59'))A\n\n\t",
        "additionalFields": {}
      },
      "id": "44c8b0cf-19ac-48ef-a320-f204d3247278",
      "name": "Postgres8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1920,
        1220
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1401750089,
          "mode": "list",
          "cachedResultName": "N8N Import (Opt-in Host Dashboard B)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1401750089"
        },
        "dataMode": "autoMapInputData",
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "id": "cbac7f97-6f59-4090-9d05-4ac810b59fbe",
      "name": "Google Sheets11",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        2320,
        1220
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "content": "(B) Incentive Period (Opt-in Hosts) Dashboard",
        "height": 80,
        "width": 178.9018080667592
      },
      "id": "38be4d14-f3b9-48dc-a8da-e5c90f436326",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 606814491,
          "mode": "list",
          "cachedResultName": "N8N Import (All Host Dashboard A)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=606814491"
        },
        "clear": "specificRange",
        "range": "A2:Z"
      },
      "id": "17a2a1ab-1f10-4899-9d6a-1e2cb06b7afd",
      "name": "Google Sheets13",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1560,
        260
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1023703382,
          "mode": "list",
          "cachedResultName": "N8N Import (All Host Dashboard B)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1023703382"
        },
        "clear": "specificRange",
        "range": "A2:Z"
      },
      "id": "4bdc1f48-6bad-4c0e-aa78-85ad6fcc3723",
      "name": "Google Sheets14",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1560,
        640
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1758903430,
          "mode": "list",
          "cachedResultName": "N8N Import (Opt-in Host Dashboard A)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1758903430"
        },
        "clear": "specificRange",
        "range": "A2:Z"
      },
      "id": "4c794f9d-f6ff-4f42-b7ec-9c63da993ba3",
      "name": "Google Sheets15",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1560,
        940
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U",
          "mode": "list",
          "cachedResultName": "Ong Tù-Gether Opt In (Responses)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1401750089,
          "mode": "list",
          "cachedResultName": "N8N Import (Opt-in Host Dashboard B)",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1j07W-fwHDU5-2Ta8cYq9kvdOu0Uiqnu0D16zq2vab1U/edit#gid=1401750089"
        },
        "clear": "specificRange",
        "range": "A2:Z"
      },
      "id": "6be3494b-54d9-40aa-8b89-31d2eeeb1bb8",
      "name": "Google Sheets16",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [
        1560,
        1180
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "15",
          "name": "Google Sheets - Kavi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\n\tselect \n\tcount(distinct case when ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as weekend_special_req,\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') then A.ref_no end) as weekend_fuld_booking,\n\tcount(distinct case when (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as Weekend_rej_booking,\n\t--One-day\n\tcount(distinct case when A.dur = 1 and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as weekend_special_req_1_day,\n\tcount(distinct case when A.dur = 1 and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as weekend_fuld_1_day,\n\tcount(distinct case when A.dur = 1 and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as weekend_rej_booking_day1,\n\t--Next-1/2-Day\n\tcount(distinct case when A.requested_start_lag <= '2' and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as weekend_special_req_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as weekend_fuld_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as weekend_rej_booking_next_day,\n\t--\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') and A.dur > 5 then A.ref_no end)as weekend_bookings_more_than_5_days\n\tfrom\n\t(select distinct b.ref_no, \n\tb.listing_id, \n\tl.url,\n\tbr.name as brand,\n\tm.name as model, \n\tlp.base_price,\n\tcase when ll.city_id in (1) then '1. KV'   \n\twhen ll.city_id in (2,12) then '2. PG'\n\twhen ll.city_id in (3,19,20,21) then '3. KK'  \n\twhen ll.city_id in (4,15) then '4. JB' \n\twhen ll.city_id in (5) then '5. IP' \n\twhen ll.city_id in (47) then '6. NS'\n\twhen ll.city_id in (13) then '7. LGK'\n\telse '8. Others' end as city,\n\tll.address,\n\tl.allow_delivery,\n\tl.is_instant,\n\tcase when pp.id = '1' then 'yes'\n\telse 'no' end as longterm,\n\tm.year,\n\tu.id, \n\tconcat(u.first_name,' ',u.last_name) as display_name,\n\tu.email, \n\tu.phone_number,\n\tb.status,\n\tb.reason,\n\tb.created_at,\n\tb.request_start_at::timestamp,\n\tb.request_end_at::timestamp,\n\t(EXTRACT(EPOCH FROM b.request_end_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/86400::integer as requested_start_lag,\n\tcase when bl.pricing_id = '3' then 0.5\n\twhen (extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400 < 1 then 1\n\twhen (extract(EPOCH from b.request_end_at::timestamp)::int - extract(EPOCH from b.request_start_at::timestamp)::int)%86400 < 2160 then\n\tfloor((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400)\n\telse ceil((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400) end as dur\n\tfrom bookings b \n\tleft join listings l on l.id = b.listing_id \n\tleft join \n\t\t(select distinct ll.listing_id, \n\t\tll.country, \n\t\tll.city_id, \n\t\tconcat(ll.address_line_1,' ',ll.address_line_2,' ',ll.postal_code,' ',ll.country) as address,\n\t\tll.updated_at\n\t\tfrom listing_location ll\n\t\tjoin \n\t\t\t(select distinct ll.listing_id, \n\t\t\tmax(ll.updated_at)as updated_at\n\t\t\tfrom listing_location ll\n\t\t\tgroup by 1)max\n\t\t\ton max.listing_id = ll.listing_id and max.updated_at = ll.updated_at) ll \n\t\ton ll.listing_id = l.id\n\tleft join listing_pricing lp on lp.listing_id = l.id\n\tleft join pricing_policies pp on pp.id = lp.pricing_policy_id\n\tleft join models m on m.id = l.model_id \n\tleft join brands br on br.id = m.brand_id \n\tleft join users u on u.id = l.user_id \n\tleft join listing_availability la on la.listing_id = l.id\n\tleft join booking_lines bl on bl.booking_id = b.id\n\twhere l.status = 'approved'\n\tand l.deleted_at is null\n\tand ll.country = 'Malaysia'\n\tand (b.request_start_at between '2023-01-20 00:00' and '2023-01-23 23:59'\n\tor b.request_start_at between '2023-01-27 00:00' and '2023-01-29 23:59'))A",
        "additionalFields": {}
      },
      "id": "43f7c414-47c9-4023-a0f7-346b590207a4",
      "name": "Postgres9",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1740,
        720
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "be07fb0c-da40-457a-a6bf-255ac98a2357",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1940,
        640
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SET TIMEZONE = 'Asia/Kuala_Lumpur';\n\tselect \n\tcount(distinct case when ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as weekend_special_req,\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') then A.ref_no end) as weekend_fuld_booking,\n\tcount(distinct case when (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as Weekend_rej_booking,\n\t--One-day\n\tcount(distinct case when A.dur = 1 and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as weekend_special_req_1_day,\n\tcount(distinct case when A.dur = 1 and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as weekend_fuld_1_day,\n\tcount(distinct case when A.dur = 1 and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as weekend_rej_booking_day1,\n\t--Next-1/2-Day\n\tcount(distinct case when A.requested_start_lag <= '2' and ((A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car')) or (A.status in ('withdrawn','cancelled') and A.reason ~* '(host|owner|avai|car)') or (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null))) then A.ref_no end) as weekend_special_req_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and A.status in ('accepted', 'completed','start_driving','waiting_for_inspection','return_car') then A.ref_no end) as weekend_fuld_next_day,\n\tcount(distinct case when A.requested_start_lag <= '2' and (A.status = 'rejected' and (A.reason !~* '(guest)' or A.reason is null)) or (A.status in ('withdrawn', 'cancelled') and A.reason ~* '(host|owner|avai|car)') then A.ref_no end) as weekend_rej_booking_next_day,\n\t--\n\tcount(distinct case when A.status in ('accepted', 'waiting_for_inspection', 'start_driving', 'return_car', 'completed') and A.dur > 5 then A.ref_no end)as weekend_bookings_more_than_5_days\n\tfrom\n\t(select distinct b.ref_no, \n\tb.listing_id, \n\tl.url,\n\tbr.name as brand,\n\tm.name as model, \n\tlp.base_price,\n\tcase when ll.city_id in (1) then '1. KV'   \n\twhen ll.city_id in (2,12) then '2. PG'\n\twhen ll.city_id in (3,19,20,21) then '3. KK'  \n\twhen ll.city_id in (4,15) then '4. JB' \n\twhen ll.city_id in (5) then '5. IP' \n\twhen ll.city_id in (47) then '6. NS'\n\twhen ll.city_id in (13) then '7. LGK'\n\telse '8. Others' end as city,\n\tll.address,\n\tl.allow_delivery,\n\tl.is_instant,\n\tcase when pp.id = '1' then 'yes'\n\telse 'no' end as longterm,\n\tm.year,\n\tu.id, \n\tconcat(u.first_name,' ',u.last_name) as display_name,\n\tu.email, \n\tu.phone_number,\n\tb.status,\n\tb.reason,\n\tb.created_at,\n\tb.request_start_at::timestamp,\n\tb.request_end_at::timestamp,\n\t(EXTRACT(EPOCH FROM b.request_end_at::timestamp) - EXTRACT(EPOCH FROM b.created_at::timestamp))/86400::integer as requested_start_lag,\n\tcase when bl.pricing_id = '3' then 0.5\n\twhen (extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400 < 1 then 1\n\twhen (extract(EPOCH from b.request_end_at::timestamp)::int - extract(EPOCH from b.request_start_at::timestamp)::int)%86400 < 2160 then\n\tfloor((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400)\n\telse ceil((extract(EPOCH from b.request_end_at::timestamp) - extract(EPOCH from b.request_start_at::timestamp))/86400) end as dur\n\tfrom bookings b \n\tjoin listings l on l.id = b.listing_id \n\tleft join \n\t\t(select distinct ll.listing_id, \n\t\tll.country, \n\t\tll.city_id, \n\t\tconcat(ll.address_line_1,' ',ll.address_line_2,' ',ll.postal_code,' ',ll.country) as address,\n\t\tll.updated_at\n\t\tfrom listing_location ll\n\t\tjoin \n\t\t\t(select distinct ll.listing_id, \n\t\t\tmax(ll.updated_at)as updated_at\n\t\t\tfrom listing_location ll\n\t\t\tgroup by 1)max\n\t\t\ton max.listing_id = ll.listing_id and max.updated_at = ll.updated_at) ll \n\t\ton ll.listing_id = l.id\n\tleft join listing_pricing lp on lp.listing_id = l.id\n\tleft join pricing_policies pp on pp.id = lp.pricing_policy_id\n\tleft join models m on m.id = l.model_id \n\tleft join brands br on br.id = m.brand_id \n\tleft join users u on u.id = l.user_id \n\tleft join listing_availability la on la.listing_id = l.id\n\tleft join booking_lines bl on bl.booking_id = b.id\n\twhere l.status = 'approved'\n\tand l.deleted_at is null\n\tand ll.country = 'Malaysia'\n\tand l.registration_no in ({{ $json[\"String\"] }})\n\tand (b.request_start_at between '2023-01-20 00:00' and '2023-01-23 23:59'\n\tor b.request_start_at between '2023-01-27 00:00' and '2023-01-29 23:59'))A\n\t",
        "additionalFields": {}
      },
      "id": "a35da099-2c13-453b-9dfa-fcc0e2cbe382",
      "name": "Postgres10",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1920,
        1360
      ],
      "credentials": {
        "postgres": {
          "id": "8",
          "name": "trevodb"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "258396af-e7ad-4b08-9855-c5f24aa14f6b",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2100,
        1280
      ]
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        11
      ]
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2023-02-07T03:36:50.244Z",
  "versionId": "b9671b88-7a98-465c-acfb-09278f89c764"
}